hey shubudha happened see able sync lips properly thatsexpression good actually problem dont know punjabi dontknow lyrics meaning help lyrics sync lipsaccording hope wont much trouble troublewrite programme let know lyrics oh programme thats awesomeyeah write programme yeah sure give heartlyrics ok perfecthey everyone saw shubudha struggling lyrics punjabi songhelp python coding must surprise pythonmany state art technologies one speech recognition speechrecognition apn provided us goggle particular libraryconvert audio file supply text convert audio file texteasier shubudha heart lyrics improve dancing skills firstinstall yes first need install use command sudopip install speech recognition go terminal type sudo pip install speechrecognition ask password downloaded pceasy install particular library speech recognition need typeterminal sudo pip install speech recognition many steps involvedcreate audio file help microphonepunjabi know punjabi spoked words song microphonerecorded file converted particular file dot wav extension yes whateverrecord whatever need convert text u need convert particular audio file dotwav extension repeat necessary speech recognition works dot wavextension files must recorded files maybe dot wpextension wav extension need convert wav extension firstcreate audio file help microphone needconvert wav extension wav extension audio file convert wavextension online many sources readily available easily convertaudio file wav extension basically whats steps involved firstinstall speech recognition repeat install speech recognitionparticular command pip install speech recognition createaudio file help microphone whatever need convert textconvert particular audio file dot wav extension three stepsinvolved first need three steps programlet us three steps program hey everyone done steps firstinstalled speech recognition recorded file micro phone convertedaudio file dot wav extension steps asked hopedone steps since done steps let us start programmefirst need import speech recognition installed saybasically import speech underscore recognition sr use name sr gospeech recognition wish first create variable name audio fileassign audio file audio file sample underscore simran dot wav speechnote fact speech recognition recognises dot wav file convertaudio file dot wav basically use audio file audio sourceaudio file source initialise recogniser sr dot recogniserbasically initialise recogniser sr dot audio fileusing audio file name assigned audio file mineaudio underscore file use source audio equal rdot record source function basically read audio file reads audio filewrite try print audio file contains r dotrecognise underscore goggle audio basically print text print textaudio file convert spoken words text except sr dot unknown value errormust wondering basically raise exception sr dotunknown value error case able understand audio raiseexception case goggle speech recognition module able understandaudio file write print google speech recognition could understand audioalso write another exception except sr dot request erroroccur able get results google speech recognitionwrite couldnt get results google speech recognition use wordexception instead error please note fact exception type error repeatexception type error saw first use audio file sourceinitialise recogniser read audio file google speechrecognition basically recognise audio file convert text caseable raise two exceptions raise two exceptions firstable understand audio second one able get resultgoogle speech recognition done programme let us try runprogramme check whether able help shubudha let us try checkyes audio file audio file contains particular song let checkyes right isnt amazing record audio file convert texthappy help shubudha think heart lyrics improvedancing skills think saw speech recognition state art technologyprovided us google python use convertaudio files text easy python thank hopeprogramme useful nice day happy learning hey eatingsomething nothing something mouth nothing chocolate yeah heyeating chocolate yeah show show show almost wait one chocolategive guys would guys please share want one chocolatewont share want last time also took last time also took wantwant wont share share please share please share hey wait wait waitwait see idea let us play game ok lucky win gameget chocolate ok deal ok play game anyways winshare see see see see lets play game yeah seesaid hidden chocolates one three bags supposeguess would hidden would like choose hmmm choosebag choice among three bags let make life simpler openbag empty chocolate must present one two bags would likeretain choice would like swap trickingfinal choice stay final choice close okturn call shubudha turn announce results ok shubudha comesaid one chocolate hidden one three bags supposeguess bag would hidden one would like choose threechoose one yeah choose bag choice yeah among three yeslet make life simpler open bag empty chocolate must presentone two bags would still like retain choice would likeswap oh seems interesting strategy let think think swapswap final choice ok shubudha turn chosen bagfinal choice yes close call amit see results ok amitcome ok chosen bag final choice contains empty oh godshubudha actually made swap gave chance yes initiallychoose choose let open simultaneously final choice let uszoom contains chocolate win chocolate thankplease give bite decided waste leasthalf half share one fourth least share ok sawmother playing trick kid trying force swap forcechange decision point really required exactly happeningsure confused right let one thing beginning video beginninglesson saw three people playing game right chocolate game vidya takesmakes play game puts chocolate inside bag pointfind bag chocolate ok amit actually loses game correctlet call amit ask question exactly lost gameshear bad luck strategy wasnt correct hi amit hello sir saw gameplayed interesting wondering understood nit criticsgame game simple appear right happened gamevidya tempted people play game win chocolate correct smartsaid opened new bag chocolate tempted changechange shubudha changed right lost shubudha questionshubudha get lucky get unlucky given second chanceswap swap say sir dont think mattersend choose one cup three yeah matterswap chances looks like correct yeah three chooseone end dont think make difference dont know think luckyeah know life full deceptions think think right wayright way sometimes feel right wayend realising right way one lesson lifegoing show swapping huge upper hand swappingmean vidya tricks succumb trick temptation changingdecide always change mind higher chances winning chocolate shallsee sure three cups one two three perfect exampledont chocolates dont jar adjust need something okcorrect chocolate alright going hidegoing say right chocolate three glasses alright ok turn sideknow chocolate ok two glasses chocolateglass chocolate let say ok let clear table visible rightamit chocolate one chocolate start choose yeah two glasseschocolate one glass chocolate hmm choose middle one middle one yesdoesnt chocolate choose middle one touch middle one choicecorrect choose yeah going show doesntchocolate going throw away scene left twochoices want change mind change mind choosedont change mind stick would like changemind ok point right yes sir changing mind changing mind doesntmatter right changing mind lost luck na luck yeahinstead would exactly correct gotunlucky right one thing ok dont repeat experiment let sayfifty times ok long possible us sure one thing stickstrategy hmmm say sir swap come may use strategy thirtytimes ok ok next thirty games always swap whenever saywhenever show empty jar like say sorry whenever showempty jar like say sir choose plan swap ok change sure thirtyway thirty way let see goes ok make note many times winprevious first strategy see many times amit wins secondstrategy let us decide others better method feelingdoesnt matter strategy choose win lose chancechances winning losing may see detailexperiment isnt counter institutive thought seemed like see amit toldmatter looks like cases choosing something chanceswinning change quick experiment amit makingturn side trying play game number timessecond case swapping right winning less first caseswapping see play game probably say oh lost bad luckplayed game many times observed played game twenty timesstrategy strategy somehow second strategy swapping seemupper hand question even experiment decide onestrategy indeed better computation rescue lets seefirst let give brief introduction monte hall problemmonte hall problem three doors two comprises goods onecomprises price say bmw whole programme screen cast using bmwprice monte hall problem participant asked choose one doorsmade choice host ask participant change choicehost basically opens particular door three doors okleft two doors one chosen participant oneopened yet host ask participant change choice dependsparticipant swap swap choice participantswap swap question answer ok seems questionexploring answering programming screen cast kind setupthree doors two comprise goods one comprisebmw choice whether participant swapped swapped tryexplore fact optimal strategy whether participant swapswap let us try explore fact let us start programming screen castmonte hall said need three doors taking list namely doors oklist doors taking another list called goat door keep trackdoor comprise goats taking two variables swap dont swaptake care fact number swap wins number dont swap wins swapbasically keep track number swap wins write number swapwins dont swap keep track number dont swap wins dont swap wins okdone generate random number keep trackparticular door comprise bmw since given three doorscall zeroth door first door second door generate random numberrandom dot randint zero two ok either three doors comprisebmw write x comprise xth door comprise bmw okdone write doors x comprise bmw yesdone rest doors comprise goatsrange write zero three since take count zero onetwo equal equal x continue ok continue continuecontinue purpose serve write continue gostart loop write continue go start loop since xth dooralready comprise bmw need take count doors except xequal equal x go start loop implementconsidering x considering doors comprise goat elsegoing else see doors comprise goat write goatone thing append goat door also goat door dotappend particular index done doors twocomprises goat one comprises bmw make userinput choice let us choice equal int enter choice int inputwrite int input make user input choice alsouser made choice host ask user swap swapopen door door open take variable door opengenerate randomly write random dot choice goat door please notefact open door comprise goat open doorcomprise goat considering goat door hope familiarrandom dot choice already explained goat door listchoice door taken randomlyopen door comprise goat write open doorcomprises goat ok opened dooralso need take care fact mind choice door openexample participant made choice door comprises goatalso opening particular door please note fact allowedneed also take care fact choice door open shouldntloop door equal equal choicechoose randomly list goat door write door open equal random dotchoice goat door need write write comment door openshouldnt equal choice made participant ok also donegive choice user whether wants swap writeswap int input dont need write int write input want swapanswer n ok done apply loopwrite ch choice made participant yesdoors choice equal equal goat means made choicedoor comprised goat initial stage win print player wins okincrement swap variable else else print player lostexplain else loop ch equal equalmeans player chosen swap chosen swaptake care fact chosen goat initial stage initial choice swapsobviously get bmw already door comprising goatopened door goat chosen initial stage swappingswap get bmw ok winning swap incrementswap variable else chosen bmw first place swappingobviously going lose game done ch equal equaldoesnt chose swap doesnt chose swapwrite doors choice equal equal goat choice goat initiallydoesnt chose swap bound lose game write printplayer lost done else didnt chose goat first place winchosen bmw initial choice write print player wins okhasnt swap increment dont swap variableincrement dont swap equal dont swap plus one printnumber swap dont swap wins let us try run programme savemonte hall dot sorry let us try run programme errorshow saying random defined havent imported libraryrandom write import random list index range giving us error listindex range handle let think easily handlethink need initialised list initialise zero ok sinceusing three doors multiplied three also initialise particular listgoat door write zero multiplied two run name doordefined basically doors door let check used placelet us try run enter choice enter choicedoor choice zero one two enter zero want swap chooseswap player wins ok player swap runenter choice enter two want swap player wins alsorun enter choice enter two want swap yes want swapplayer lost swapped run one want swap yes player winsenter choice two player lost keep trackfind optimal strategy really confusedrun programme example ten times try findnumber swap wins number dont swap wins takevariable take variable example took j j equal zeroloop j less ten run ten times indentproperly indent properly since run ten times useloop indent properly ok go goinside loop choice thing also insideloop write choice loop inside loop nestedbasically else please indent properly request otherwiseget error else ok done letus try run enter choice zero want swap yes enter choice twowant swap yes enter choice one want swap two swap yesone swap yes going think didnt think didnt increment j pointj variable yes need increment j variable write j equal j plusone run definite number times ok ok exhibitlet us try run get optimal strategy enterchoice zero want swap yes player wins want swap wantenter choice two want swap yes one want swap zerowant swap yes enter choice two want swap enter choicetwo want swap yes enter choice one want swap yes enterchoice one want swap yes enter choice zero want swapyes number swap wins see five number dont swap winsone swapping optimal strategy really think swappingoptimal strategy let us try run try find optimalstrategy let us try zero want swap yes one twowant swap one two yes zero yes two yes one zero one yesalso number swap wins greater number dont swap wins runget clear cut idea happening enter choice zerowant swap yes player lost one want swap yes two wantswap yes one want swap yes two want swap yes enterchoice one want swap yes zero want swap two onezero number swap number dont swap wins equal gettingdifference distribution every case run number swap wins eithergreater number dont swap wins equal number dont swap winssay sure fact always win swaphigher probability winning swap yes seems right programmenumber swap wins always greater equal number dontswap wins say higher probability winning swaplower probability winning dont swap doneprogramme go programme reallyfirst make two list first one doors second one goat doortaking three doors zeroth door first door second door twogoat doors two comprise goats one comprise bmw nexttaking track number swap wins number dontswap wins variables loop usingloop need keep track number swap wins numberdont swap wins ok running programme ten times run fifty timeshundred times check optimal strategy according number swapwins swapping strategy work case please checktaking variable x particular door except door comprise bmwusing loop rest doors would comprise goats except doorcomprises bmw rest doors comprises goatusing new key word continue using except door alreadycomprises bmw equal equal x continuebring control programme start loop consideringx considering list doors else equal x doorscomprise goat also need append goat door list keeping trackdoors comprise goats enter choice ok choiceparticipant chooses door open host open one doors ok pleasenote fact mind open door choice shouldnt equal ok shouldntequal using loop door open equal random choice door sincealready using goat door list make choice list goat door okmake user input whether wants swap okask user want swap n ch equal equal chequal equal means wants swap made choice goatfirst place made choice goat first place choosing swapbound win get bmw particular case player winschosen swap increment number swap wins elselose game doesnt chose swap chosen goatinitial choice bound lose game else chosen bmwinterested swap means going win game particular case numberdont swap wins increment incremented since using j lessten using j variable need increment j incremented jprinting number swap wins number dont swap wins hopeunderstood particular programme monte hall programming screen castuseful guys thank happy leaningrock paper scissor win rock paper scissor win rock paper scissor draw rock paperscissor draw hey guys playing playing rock paper scissor okscissor ok paper rock rock cuts scissor scissor cutspaper paper cuts rock rock cuts scissor scissor cuts paperpaper cuts rock get explain understand please let us playdont waste time dont disturb ok please rock paper scissor cheatingcheat changed sign dont lie show scissorchanged paper simply telling dont want play hey vidyatalk minutes sure friends playing rock papers scissors gameunderstood goggled one friends cheating want createmechanism one cheat way well rememberstudied something like oh yeah nptel course called joy computingactually professor teaches mechanism play rock paperscissors one cheat definitely take look oh yeah thanksvidya definitely take lookten old kid play whole lot games dad dad would invariablywin arm wrestling running dad number one even indoor gameschess tick tack tow anything involved logic dad would dad way fasterabsolute game could win came acrossgame called rock paper scissor muscle power logic role playgame involved sheer luck happy kid game becamefavourite let tell rules game called rock paper scissors threeitems told rock paper scissor point three items equallypowerful time equally power less every single item less powerfulitem powerful item instance paper less powerfulscissor scissor cut though paper paper powerfulrock completely cover rock thats story paper comingrock rock powerful scissor see rock smash scissorrock less powerful paper simply paper cover rock lastlyscissor scissor powerful paper cut paper pieces lesspowerful rock stated already two people randomly choose item chooseone three items rock paper scissor moment choose declareshowing symbol close fist denotes rock palm paper v symbol scissorpick decide item powerful declarewins see several possibilities also possibility draw pleasenote people choose item let give examples assumedad chooses rock choose scissors obviously dad wins rock beat scissorcase dad chooses paper chose scissor obviously scissor cutspaper assume dad ended choosing rock call draw letenumerate cases assume dad chooses rock son also chooses rock draw dadchooses rock son chooses paper son wins dad chooses rock son chooses scissor dad winspaper rock dad wins paper paper obviously draw paper scissors son wins scissorrock son wins scissor scissor draw scissor paper dad winscases see great game play time realise roomcheating patch way patch course joycomputing solution problem programming ideasstraight forward solution interface look like finish coding firstplayer asked enter one three numbers zero one two zero stands rockone stand paper two stands scissors firstly son comes enters numbergoes away place screen cleared comes dad enterschoice number zero one two based item chosengoes away place come together observegame committing item nobody cheat computerfinally declares winner well easy program dont thinkcumbersome dad son two players come inside room punchingchoice go keep game requires comepunk go back come together see result looks likefeasible way creating good interface better way let us seecool way dad son secretly come chose placeholderten digit number mean assume ten digit holders sonsays going choose third digit means item going hiddendad comes separately chooses placeholder assume chooses seventh digitmeans item stored seventh digit dad sonsit together dad doesnt know sons placeholder son doesnt know dads placeholdersit together start typing ten digit numbers hiding secrets itemsecret place holder see idea cool make little cooler seelot intelligence looks like one person guess personchoosing looks like although sure tell whetheramount intelligence one player guess player player secret placeholderlet us make game lot complicated going bring two new changesgame change one going assign zero one two rock paper scissor eventhats secret zero son could rock zero dad could scissor inputinformation secretly way input placeholder secretly second onewould take ten digit number entries zero one two let us takeordinary ten digit number placeholder anything zero one two three fourfive six seven eight nine put secret zero one two secretplaceholder see make complicated increasing numberdigits necessarily ten digits make fifteen digits twenty digits rightprobably become difficult people enter bigger number till realisebigger number digits complicated game becomes personguess know rock paper scissor two player game first letassignments say player one player two player one zero rock onepaper two scissor similarly player two assignments letzero paper one rock two say scissor please noteusing dictionaries assignments done assignmentsalso make user input assignments wish completely wishmake user input number secret bit position numberloop true first let us make user input num one player onechoice player one input player one player one enter choice playertwo num two input player two enter choice also make userinput secret bit position player one bit one int input player one entersecret bit position player two bit two int input player two enter secret bitposition please observe using int num one num two usedinput default input tag python string want bit one bit two integerstype cast int next please see loop run till infinite timesrestrict loop loop run till number times till userwants one parameter say ch make user inputparameter ch input say want continue yes n chn break loop break doneassignments well input required parameters next step quote rulesrock paper scissor assume u watched videos know rulesrock paper scissor still record let us revise rock paper scissor rock paperscissor three entities one rock second one paper third onescissor rock paper scissor paper cover rock rock crush scissorscissor cut paper please observe nothing one important everythingequal powerful let us try code rock paper scissor rock paper scissorfunction rock paper scissor pass num one num two bit one bit two next stepwould calculating two parameters calculated num one bit onenum two bit two calculate p one player one basically int num one bitone mode three p one p one basically placeholder bit position bit onenum one mode three numbers inputgoing input basically decimal numbers want answer zero one twomode three similarly player two p two int num two bittwo mode three done calculating p one p two code ruleseasily player one p one equal equal player two p twodraw print draw next rule else player one p one equal equal playertwo rock player two p two equal equal say scissor know rock crushscissor player two wins sorry player one wins player one wins next ruleplayer one p one equal equal rock player two p two equal equal paperknow rock crush paper cut know paper cover rock player twowins next rule player one p one equal equal paper player two p twoequal equal scissor know scissor cut paper player two wins printplayer two wins else player one p one equal equal paper player two p twoequal equal rock know paper cover rock player one wins printplayer one wins next rule else player one p one equal equal scissor playertwo p two equal equal rock know rock crush scissor player twowins print player two wins next rule else player one p one equal equalscissor player two p two equal equal paper know scissor cutpaper player one wins print player one wins done codingrules done assignments done input required parametersdone coding rules let us call function callrock paper scissor pass num one num two bit one bit two done letus try run programme end literal let us try runenter choice choice basically number input three digit number one twothree input three digit number five six seven say secret bit position playerone zero player two one draw please observe input numbernum one num two input form string texting start zerogo till number digits minus one repeat texting start zero go tillnumber digits minus one ok input secret bit position accordinglylet us look output enter one two three five six seven secret bitpositions zero one player one secret bit position zero oneplayer two secret bit position one six mode six mode three zeroplayer one one player two zero player one one paperplayer two zero also paper results draw want continue typedont type one example five six seven eightsay two three four let us enter secret bit position player one two sayplayer two one calls draw let us another example twothree four one six seven eight zero three draw one example seven eightnine four five six two one player one wins try many number timeswant hope enjoyed programming screen cast hope seenext programming screen cast thank nice day hey amit sowjanya yeah hiplaying rock paper scissor game na yeah show something read ok okwrote programme yeah nice player one assignments player two assignmentsenter position ok enter five digit number looks awesome yeah think goway play play awesome yeah two minutes enter assignmentsyeah yeah yeah enter assignment ok yeah give two secondsguys play ok oh turn turn yeah play yeah yeah oh yes seeok ok let second turn wait wait see yes oh god thankmuch draw like game yeah yeah yeah one cheat oh yeahhey amit lets play game game called twenty questions gamekeep number mind say one ten thousand ok guess right lesstwenty attempts less twenty attempts yeah dont think possible oheasy ok rules goes like ask whether number less equal greaternumber say yes less equal greaterask whether number less equal greaterrandom number yeah yeah say number ok lets try say keep fivestart one ten one twenty ask whether number less tenyes ask questions sure lets play yeah yeah crackless twenty attempts ready see ok keep number ok one tenthousand yeah number less five thousand equal five thousand greaterfive thousand less five thousand less five thousand ok numberless two thousand five hundred equal greater two thousand five hundred lesstwo thousand five hundred less cool less thousand two fifty equaltwo fifty thousand two fifty greater thousand two fifty less thousand twofifty less ok less equal greater six twenty five hmmm lessawesome dont think crack twenty attempts ah wait less equalgreater three twelve less three twelve awesome less equal greaterone fifty six less hmmm getting closer less equal greaterseventy eight less ok less equal greater thirty nine less thirty nineawesome less equal greater nineteen less nineteen lessequal greater nine greater nine greater nine less equalgreater fourteen exactly fourteen yaar yeah wow cracked eleven questions seeexactly eleven even possible whats logic behind yaar thats goodquestion saw happened played beautiful game even wrote piececode let bring small variation game variationfollowing tell number mind number less onelack common guess number difference game previous gameassume keep number six hundred mind know less one lack rightearth guess going six hundred askquestion greater five hundred greater ten thousand greatertwenty thousand right smart way thinkgoing tell something looks like different gamediscussing number one one lack guess number variantright going give example looks different two thingsexample would search word english dictionary letssay want see word proclaim p r c l proclaim searchdictionary open dictionary middle middle know whetherproclaim first half dictionary second half dictionary momentopen dictionary middle get words starting n letter nknow sure first half dictionary words starting b cefghijklm n saw word open dictionary middleword proclaim second half dictionary discardfirst half look second half go centre centre secondhalf lets say words starting concluden first half dictionary discarded take midpointsecond half seeing means word proclaim firsthalf little cut dictionary second half first half knowmean right think every time open dictionary half discardingone part retaining part correct forth finally reachedword proclaim time dictionary size reducing half correctproblem discussing keep number mind oneone lack guess number use way searched englishdictionary method think indeed possible oknumber mind less fifty thousand greater fifty thousandsee like dictionary trying see see lineleft side first half one one lack second half numberfirst half say less fifty thousand number second halfsay greater fifty thousand know surereduce search space half ask id number less twenty fivethousand greater twenty five thousand see method exactlysearching english dictionary let us go ahead try write piececode whatever popularly called binary search binarysearch words look complicated nothing binary means cutting twopieces search one piece continue space searchingget halved quickly note usage wordindeed quick quickly narrow search key timecalled binary searchlook array thirty elements spot umber eleven ah looks difficultlook every single element beginning till end arraysorted sorted mean ascending order numbers dont thinkwould easy search number eleven sorted versionarray list see eleven right used binary search findeleven moral story want find element search element listeasier list sorted see general true life findwant keep life organised list organised ascending orderascending order searching element becomes easy see teachingkeep search element list sorted dint teachsort list let us see one sort listhi guys last video saw saw perform binary search listnumbers sorted saw list provided functionalready sorted means numbers ascending order one two three four fivesix seven eight something like real world happens whatever datawhatever data get sorted actually random numbersrandom orders whenever perform kind search lets say binarysearch sort sorting algorithm lot applicationsprogram going perform sorting algorithm known bubble sorteasy algorithm tell tell exact algorithmuse algorithm write program write program bubble sort alsolets see let first given array let us assume array size fiveelements five one four two eight want want sort elementsarray means final array look like one two five four eight bubblesort like first loop two loops exactly firstiteration compare first two elements see whether firstelement less second element first element lesssecond element swap positions five less oneswap one come five become one five move nexttwo elements five four go compare seething five less four ok otherwise swap fiveless four swap become four five movenext two elements five two perform checkcondition five less two swap become two fivemove next two elements conditions since five less eight dontswap array first loop go second loop seconditeration second iteration compare first two elementsthing find pattern first loop inside first loop mustanother loop loop things whenever second wheneverfirst iteration first loop gets second instance come secondperform thing perform compare first two elements onefour since one less four dont swap anything move secondtwo elements four less two swap two comes fourbecomes two four move next two elements four less five dontswap anything next two elements less eight dont swap anythingarray sorted need exactly something like one two four five eightknow algorithm give simple basic idea algorithmwriting pseudo code kind thing use idea write programsimple program think anyone write see next video letwrite program algorithm bubble sort let write function defbubble parameter array want get sorted ok first let computelength array length function length check returnslength lists provide length len return lengtharray list write first loop range tenlength array first loop first loop number elements list oksecond loop start first element swapping seehappening swapping maximum element going lastposition second pass dont dont compare elementinclude element comparison safely exclude last elementgot last pass every time exclude one element way getsorted array second loop go j range start zero ok gon minus minus one minus one range issue gominus one part minus ith element maximum elementgets last position exclude element puttingminus means zero means first iteration meansmaximum element went last position go last elementsecond loop becomes one means one maximum elementfirst maximum element went last position exclude nminus required becomes two means two maximum elementsfirst maximum element second maximum element went went correctposition means nth position n minus one position excludecondition required check condition ever talkingj means current position greater next position j plusone thing happens swap create temporary variable tempassign value aj aj put j plus one j plus one put tempvariable swapping two elements thats thats programmesorting complete let create array gave examplefive comma one comma four comma two comma eight ok array callfunction bubble pass array let print elements sorted arraythats print great program complete run cool one two four fiveeight array five one four two eight got one two five four eight one twofour five eight sorted see create array runprogramme get sorted array perform sort performsorting one algorithm best algorithmmany better algorithms example quick sort merge sort heap sort sortingalgorithms basic algorithm guys use knowmuch sorting learn programming algorithm datastructures related things go advanced sorting algorithmstime takes function takes less amount time order sort array thanksaw sort list fact sort build function python functionwell taught completeness sake interest sake manually sortelements list fact sorting huge topic go even givecourse thirty hours duration sorting many techniques beautiful deeptake much time let us limit discussion one type sorting techniqueshowed left go explore different techniquessorthello every one today going write program searching actually mainobjective understand binary search saw play person easily getsearch number list numbers sorted numbers easily less number stepssee binary search works must understand simply searchnumber list list given numbers use linear searchconventional simple search go values try find elementwant find list see many numbers steps takesswitch binary search start spyder type spyder terminal waitok write programme new file entitle zero change namewant first want first list numbers programme take numberssorted order ascending order numbers always one two three four fivesix something like means always sorted mean numbers alwaysascending order first create list numbers write writerange lets say want numbers one thousand one thousand one rangewant number lets say one n give argument n plus onealways prints number less given number write letsave linear search ok awesome need list let write nameelement gives simple bracket create list use order add elementslist function name append write elements dot see showfunctions use list beauty spyder tapgive append write thats created list ok thatsrun see list ok run program type element shownumbers one thousand see numbers one thousandawesome recommend write programmes function let createfunction easily call def linear search give range thats nn give also give parameter x want find lets seegive indentation ok awesome done created list numberswant want search element x list write another loopsee list complete created list iterate elementslist easy write since list iterative meaniterative goggle understand iterative elementspython iteratable iteratable iteratable golike loop write list name element ok see elementcreated go though also element print giveelements iterate elements elements element okelement ok iterating well use element write onecondition equal equal number x want find print yesfound number position str ok since example numbers sorted one nwrite str minus one simply write str ok call name okalso print whether found number didnt find numberuse flag value let say flag equal zero ok initially value zerofound number put flag value one write condition flagequal equal zero print number found thats good programme completelet run thats call function linear search see whenever typeshow needs n x n range put thousandone next number lets say want search fifty ok type show yes foundnumber position fifty number sorted ok cool want knowmany iteration took get number createvariable count zero initial value whenever going elementcount plus equal one increasing value one dont needwhenever find number list dont need go go elementslist break loop dont need go find go looknumbers already got number break flag zerofind print count thats let write number iterations equal plusstr need change string awesome done let check linearsearch give one thousand sorry number fifty seven say ok see yesfound number position fifty seven number iteration taking fifty sevenfifty seven check numbers one two three four five six seven eight ninego fifty seven see number elements listhuge lets say one million want search number far endlets say number want search one million take one million near onemillion iteration find number huge game sawuse advantage sorted number whenever number elements arraylist sorted use extra information searching particular number easilycorrect binary search see use extra information searchnumber list sorted numbers drastically decrease number iterationless number iteration say less number time less timesearch number next video see binary search see iteratehello guys last video saw linear search saw inefficient searchbig number big array suppose million numbers array wantsearch close million take around million steps search numberliner search inefficient much memory powermuch even time spend array size one million arraysorted going see good algorithm known binarysearch whenever get array sort either ascending order descending ordergetting extra information used search search elementarray less number steps exactly going seegame game saw video two players one ravi amitplaying game ravi idea guess number amitthought less amount iterations game like search guessnumber one thousand second person asks second person firstcomputes midpoint array one thousand midpoint five hundredasks whether whether number guessed equal five hundredfive hundred ok got number five hundred askwhether less five hundred greater five hundred suppose numberguessed less five hundred see safely discardfive hundred elements array number never go beyond fivehundred already said less five hundred numbers sortednever go search part array safely discardnumbers five hundred thousand number elements leftone five hundred ask compute midpoint arrayleft one five hundred midpoint two fiftyask whether number two fifty says yes ok saysask whether less two fifty two fifty twofifty logic use since two fifty searchless fifty never happen element present arrayone two fifty safely discard numbers one two fiftyarrays left two fifty five hundred ask questioncompute midpoint two fifty five hundred use midpoint askquestion go left part array right part array logicbinary system every iteration whenever computingmidpoint discarding half part array way size arrayreducing two iteration exactly use logic binary searchlet right definition binary search def binary search take two argumentsone array lets say array name element want search greatcreate two variables use variables position array want knowcreate variable lets say first position first pos zero array startszero safely take zero first position last position last pos sorrylast position array python function named lencompute length array suppose type len get length arraygives length array gives number elements array know listarray whatever said python starts zero take minus one let tryconsole suppose array name array one elements one comma twocomma three comma four comma five ok type length array one get ohfive elements get five position fifth elementactually four array starts zero zero one two three four suppose wantretrieve last element type array sorry array one type fourget fifth element type array length array one ok length array onereturn number elements array one five number elements arrayone five put minus one whole thing means five returnlength array one minus one four print give fifth elementfourth element five exactly going putlast position length array minus one ok also take flag value usesee whether found element ok warning means variablescreated variables using soon usewarnings go ok create loop lets see let writefirst explain exactly trying type first posless last pos flag equal equal zero mean keep loop goingfirst position less last position two variables firstposition always less last position flag equal equal zero told flaglet write comment flag means flag go zero element foundmeans continue loop first position less last positionhavent found element looking till continue loop okfirst strategy first compute midpoint arraycompute mid equal write compute know compute midpointarray take first element position first element mean first positionarray last position array add divide twoiteratively compute midpoint sub array write first pos plus last posdivided two write divide two return float value checksuppose five plus two divide two giving three point five exactly wantinteger value suppose number odd give integer value either left rightdont care much give integer position position usefloat value able retrieve element position need integervalue int called integer division python writefive plus two division give three want put onedivision operator done computed mid checkcheck whether element x present mid write x equal equalmade position done check another thingwrite make flag equal one means found elementwrite print element present position write give position mid variablewrite str mid add plus one also get exact positionwriting assuming know array starts zerocontext printing mid value thats return meanswhenever found whenever get element lookingreturn computation return returnreturn function value returning anything means getfunction main calling function thats ok present midposition check whether left side right side writeelse present mid position x less array mid meansx less mid discard right side array means safelywrite last position shifted mid minus one mid middiscard mid first question first condition checked whetherpresent mid present mid discard mid elementsmid safely reduce size array positioning last positionmid minus one discarding elements array waitsorry less mid mid discard first partarray zero mid discard shift first position firstpos equal mid plus one thats ok programme functiondoesnt returned anything things means array didnt find valuelooking safely print loop means loop stillable didnt find element write number present thats lastfunction linear search printing number iterations also many iterationstakes also would like print number iteration taking findvalue x create count variable count assign zero every iterationloop increase value printed element presentprint number iterations string count ok cool need callfunction order call function create array lets say arrayname enter elements array range one five hundred letssay dot append call function binary search givelets say number search seventy programme completerun program see output ok showing number presentexactly logic present binary search know numbersuppose type see seventy looking present stillshowing element present let try small number lets say numberelements ten want search four let try still showing numberpresent let see numbers one two three four five six seven eight nine ten fourexactly happening whenever condition putfirst position less last position might happen time first positionlast position one number let say first position last position pointing fourtime still one iteration search required condition failfirst position less last position showing first position lesslast position equal last position fill able searchelement make condition less equal meansfirst position less equal last position search elementsee run show number present position three zero onetwo three number iterations four four times switchlets see number elements hundred one search numberseventy run see number present sixty nine seventy linear searchlooking search number number elements putthousand ok ok searching number thousand taking thousanditeration lets see many times many iterations take runsee number present position nine nine nine ten iterations ablesearch number ten iterations taking thousand iteration linear searchtakes ten iteration binary search suppose make one million lets say ok wantsearch number lets say one lack ok see many iteration take twentyiteration twenty iteration able find number whether knowfind number would taken one lack iteration linear search beautybinary search actually takes exactly log number elementsarray number elements lets say sixteen take four iterationthirty two five iteration sixty four six iteration every timedividing two discarding rest part taken one part timeway one half array every time discarded reducing space twoexactly two every time two two two two becomes log two log base twoyeah finished binary search please questions postdiscussion form think simple programme thinkcreate efficient elegant program like better please postdiscussion form might help people learn ok guys thanknext joy happen didnt get yes nextchoice cipherspersonally exciting idea throughout course least accordinggoing talk science secrecy know means let illustrateexample assume romeo juliet want communicatesecretly would go communicating assume romeo wants send longletter juliet suspects someone may probably tamper lettersee written wants juliet read case someone else gets holdletter course read make sense would ensureencrypts letter simple method goes follows letter romeowants write sweetheart juliet see love letterfirstly writes letter shifts every single alphabet five units meansbecomes f b becomes g z happens lettersparticular letter romeo want send juliet takes form letter finallylooks something like romeo sends beloved juliet juliet getsknows exactly romeo done original letter basically communicatedprotocol juliet done following would guessedobviously shifts back five units means makes f g becomes bgets original letter see shift five secret keyfive romeo juliet laila majnu fifteensomeone gets know method used lovers simply shifting unitsmediator comes catches hold letter communicated boy friend girlfriend break code middle man comes catches hold letter sentboy girl knows idea shifting every single letter unitstry possible shifts first tries one shift tries see text makessense whatever seeing right let us take three lines text letterboy writes girl shifted units middle man doesntknow wants crack tries assigning b b c c meanassumes one shift tries see text generated makes sensesee making sense tries two shift three shift fourfive six seven finally eight seesshift actually making sense completely words english words henceconcludes shift boy using happens eightdeciphered encrypted text little intelligence infermethod used two people communicate broken easily mediatormiddle man knows provided technique used shifting doesnt knowunits shifted tries possible shifts shift one shifttwenty five twenty six tight one give valid english textgets valid english text concludes decrypted secret sawcalled popularly caesar cipher literature cryptography well knowtechnique used mainly simplicity fact anyonebreak going teach technique little complicatedrather lot complicated explain caesar cipher goingtell something else lot complicated appears though nobody breaklot complicated way encrypting given text goestake every single english letter assign complicated symbol romeowrites along letter juliet simply takes every single letter every single symbolinstead using english alphabet letters uses corresponding symbolsagreed romeo juliet according illustrated standsymbol b stand symbol z romeo converts letter loveletter something complicated looking look like going impossibleanybody crack isnt earth knows letter map letter rightlooks like perfect way communicating way break evencipher let us take break let tell nice story story looks completelyunrelated talking related mom ten sonsdifferent heights one day sons trying prank mom wore masksdisguising come front mom challenge identifyten sons appear front like say mom identify ussay chorus mom perplexed see faces sonstold something different heights think difficultmom identify ten sons masked appear frontmom say mom identify us hoping make mom perplexedable identify little know mom identify sonsidentifying heights knows shortest second shortest thirdtallest goes time calling namespatting back one time says athri brugu kuthra vashista gowthamakashyapa angerasa rama bheema shaama ten names right exactlyused identify heights whats moral moral despitefact sons concealed identity mask mother used parameterwhats moral story story encryption decryption theorysee connection well indeed connection connection tryconceal letters form symbols see english speaks aloudmean english peculiar statistical property sounds complicated nothingmean following frequently occurring word letter englishalways happens isnt beautiful idea sounds though impossibleanyone decode substitution letters english alphabet randomsymbols look like impossible break code see english speaksaloud anybody easily decrypt text seemingly looking seeminglycomplicated looking technique huge loop whole fact easy previous onediscussed subject called cryptography idea makingciphers also breaking almost every single technique come historybroken ones currently place believe status yetbroken science secrecy making breaking codes reachedillustrated invite read givereferences good books go ahead read makescryptographyprofessor explained method share messages secretly let tryshow share messages secret way hello every one startprogramme substitution cipher would like explain concept pythonname string first string string used represent text python text maycomprise spaces numbers even alphabets use stringfirst need import library called string take variable named xwould initialised string example hello world please note fact everytime initialise string close string double quotes closestring double quotes string called hello world wantexcess particular alphabet string x excessparticular alphabet hello world giving particular number example wantexcess h hello world would write print x zero know indexing startzero arrays well strings want excess alphabet h hello worldstart zero h zeroth position would write print x zeroh example want excess alphabet two occurrenceswant excess alphabet first position hzeroth position e first position n second second l third positionfourth position since fourth position write x four let us seeoutput excess alphabets particularposition string ok many functions available string examplewant excess alphabets second position fifth positionactually one go without even using loop kind loop sayx two colon five print prints llo excess alphabetsparticular range positions ok want know want get lengthstring function need write len lenbracket write name string x write x let usprint eleven clearly see length string x eleven wantconvert string upper case straight away function available pythonwrite name string x dotwrite upper upper function available python used convert availablestring upper case let us see output print print xdot upper yes converts string string hello world upper world upper casedone strings one function available python factmany functions would like explain one example helloworld want replace one alphabet alphabetwrite x dot replace example replace h j writereplace h double quotes comma j double quotes output jelloworld instead hello world strings pythonprogramme substitution cipher use stringslet us try code substitution cipher substitution cipher input filenamed ip underscore file text need convert text wayrecognise third person using substitution cipher needstring alphabets substitute letters python provide stringnamed string dot ascii underscore letters print write print string dot asciiunderscore letters see letters lower case well upper casesubstituting string way recognise text presentinput file recognise third person using particular stringorder execute substitution part write import string initialisedictionary called dict hope already familiar dictionaries strings wellfile handlings using three particular programmefamiliar concepts would suggest go though previous videosplease go previous videos watch programming screen castdictionary named dict equal dict equal curly braces initialisedictionary converting particular string substituted format writerange length string dot ascii underscore letters particular dictionary letterith position substituting minus one position position letter choiceletter want substitute particular letter substituting lettergiven letter previous letter substitutedz b would substituted c would substituted b b would substitutedc dictionary going work write string dot ascii lettersstring dot ascii underscore letters ith position substituted string dot asciiunderscore letters minus one position used minus one even use plus oneplus two even minus two minus three wish substituting minus onethletter tip get idea programming working would easyobserve particular dictionary print dictionary getidea happening dictionary see capitalz substituted capital z b substituted c substituted bsubstituted c substitution working substitutionparticular dictionary named dict use dictionary dict convert inputfile first need open input file named ip underscore file writeopen ip underscore file dot txt f write true need read filecharacter character need substitute particular character accordingdictionary take variable named c c equal f dot read needcheck one two things first checking whether encounter endfile write c file pointer hasnt encountercharacter means reached end file particular case print endfile break file loop c file pointer encounter calready present dictionary c dict particular case take stringname data please initialise string data initialisedouble quotes initialise string data data equal dict c cpresent dictionary particular case data equal dict c cpresent dictionary cant anything write data equal c insteaddict c please note fact dictionary dict alphabets presentlower case well upper case file file integers zeronine special symbols present substituted exerciseencounter file special symbols integers applysubstitution factor particular file exercise leftstring data substituted file substituteddata print write print data let us try printdata data exactly like input file error programmereading file need supply bullion value supply onetry read substituted file mistake readingfile need supply bullion value one seesubstituted input file something cant read cant recognise okstore output file get clear cut ideasubstitution happening take another file named file equal openop underscore file dot txt open file writing mode since need writenext need need write particular string data filewrite file dot write curly braces write data ok donewriting part close file write file dot close round braces let ustry run programme substitute text let us open file outputfile op underscore op underscore file see datasubstituted form something cant recognise cant figure textactually substituted using substitution cipher doneprogramme go program first string presentpython name string dot ascii underscore letters use string substitution partsubstituting letters present string minus oneth letterusing dictionary initialise dictionary dictexecuting substitution part particular part writing dict string dot asciiunderscore letters ith position substituted minus oneth lettersubstitution please note dict dictionary dictionaries keys valueparticular dictionary keys letters present string valuessubstitute letters repeat keys values present string values substituteletters opening file input file reading charactercharacter need supply bullion variable one read file charactercharacter checking conditions first condition checkingwhether encounter end file encountered end fileparticular case programme print end file break loopchecking particular character present input file actually presentdictionary present write c data otherwisepresent write dict c substituted letter data end writingstring data output output file get clear cut ideasubstitution working printing data finally closing filesee two files output file input fileinput file read text output file output file convertedtext using substitution cipher recognised cantrecognised third person unless gets know substitution cipherused quote substitution cipher convert many text hopeprogramming screen cast useful guys happy learningremember remember yes next choice tictac toegood time used play lot games childhood goingold books rough note book would look like scanback guess getting nostalgic memories seeingfamous game called tic tac toe used play childhood love playingenjoyable good memories living feels greatlecture series would take memory lane shall live childhooddays fun way computing good old memories almost playedgame childhood want live memorable days would startrules game game something like three cross three boardnothing board containing three rows three columns total ninecells two players involved game player given symbol onegiven symbol x one given symbol suppose alternate turnsturns player expected occupy vacant slot boardalternate turns one able occupy three slots three slots comeone single row three single slots come one single column occur alongdiagonal diagonal one diagonal one able firstconsidered winner game goes one able occupy positionsmanner declare draw one wins game goes hopegone back childhood days would observe rules gamemuch playing established victory muchplanning thinking involved requires lot envision ability need envisionwould move well would move opponent make given nextturn envision would play increase chancesmaximise chances winning well minimise chancesopponent wins intelligent player would play game playersplay intelligently game would mostly draw particular strategy wantmaximise chances winning minimise chances opponents winningcalled min max strategy min max strategy famous game strategymin max games thrilling given joy computing coursewould see shall play game fun way using computers hello guyswelcome programming screen cast tic tac toe discussiongame played childhood namely tic tac toe three cross threeboard nothing board consisting three rows three columns ninecells according us three rows row one row two row three column onecolumn two column three count computers count different way letshow see index done computer board sort structurenothing matrix basically matrix computer array twodimensions two dimensions namely rows columns arraycomputers represent board interpret board seecounting starts zero zero one two counts count one two threeplease note say second row second column first row first columncomputers whatever count subtract one getcount per computer perspective take careperspectives humans computers first would like tell regardingindexing part ok lets get started game basically let give briefoverview let give see three cross three board board containingthree rows three columns players two players game playersgiven symbol one given symbol x one given symbol initiallyboard fully empty place symbols one vacant positionsboard game goes suppose player one places next time player twooccupy position occupy vacant position something like gamegoes would see players occupies consecutive three cells alongrows columns along diagonals diagonal considerwinner player able first occupy three consecutive cells mannerwinner case one able draw discussedlecture game moves ability predictopponent play every player play keeping mind maximisechances winning minimise chances opponents winning example letgive overview better could pen paper draw boardindexing purposes taken particular image plane board beneficialproblem please take paper draw kind grid follow instructionsbased understand basically empty board initially firstplayer comes places symbol place along diagonal rowscolumns way least one ways occupy three consecutive positionswin maximise chances winning particular position one comma onecomputer second row second column humans particular positionintersection many winning possibilities along diagonal along diagonal rowcolumn along four winning possibilities three columns three rows twodiagonals among eight winning possibilities four wining possibilities particularcell present smart player would start playing position maximise chanceswinning first players move second player gets movenext turn would want maximise chances winning also blockwinning minimise chances wants block winningx would like block one four wining possibilities maybeplace coin somewhere row possibility block givenrow possibility block next turn player x places coinwaste would place coin somewhere seen tillx x somehow os turnsomehow next turn x could placed x would winner thinksway miss particular location next time x place coin wouldwinner would place coin block winning opportunity guessunderstood strategy players would using would wantmaximise chance winning well would like minimise chanceopponent winning players smart try dry running sequence runtry dry running think players equally smart would draw casepoint time player losses foresightedness doesnt think opponentpoint time suppose assume particular instance doesnt placecoin places somewhere next turn x x would place cointhinking blocking beneficial place coin winaim priority winning time minimum prioritydefeating opponent minimise chance winning blockmuch possible well increase chances occupying three consecutive cellswin game goes recommended takenblank sheet paper dry run game would go play game without usingcomputer try would understand game played kind smartnessrequired player game game goes let usstart coding ok said array board array computerarrays defined package called num py let import import numpyimport let call board name easier let call boardwould say numpy numpy dot array array need array three rows threecolumns need give list within list row separate listblanks initially blanks representing hyphens blank cellmean hyphens three columns row three hyphens wouldgiving three blanks sorry first row given secondrow let give ok second row third row ok first column third rowsecond column third row third column third row three rowsdefined ok player one symbol allocate x told x player twoallocate symbol defined player one symbol player one symbolsymbol using x player one symbol x player two symbol letstart game let say play would seen till saying play servepurpose something defining see got morning symbolundefined name give proper definition donesay play let define define play ok give colon start function definitionevery particular turn turn alternated first turn given x secondturn must given many turns would given totally three cross threegrid nine cells nine turns let say useloop need repeat nine times turn use intuitive name easierunderstand turn range would seen syntax till useloop pre defined number times wanted nine times let say nine turn tillrange nine start zero till eight count zero two four sixturns correspond player x one three five seven even turnsplayer x odd turns player capture using modulooperator lets use turn modulo two equal zero eventurn say turn x let print x turn turn x okallow place symbol board let call place player one symbolplaces symbol initial two moves would observed winningpossibility fifth move still single loop running turnslet us include check used initial stagessubsequent stages would needed soon winning movevacant slot still nine slots occupied stillwinning move game stop let saylet use terminology like one someone player one symbol personbreak quit game nothing quitting game elseplayer x done else turn odd turn thingswould copy would player two whose symbol used playertwo symbol player two symbol particular thing checkcheck would seen dry run fifth turnpossibility one player win fifth turn turn anyone wingood amount possibilities winning move particular moveplaced position placement winning placementquit game using far good intuitiveness guessunderstand repeat things nine times ninecells present board every even number turn x odd numberedallow player place symbol vacant slot board checkwinning placement quit done till ok could see seeundefined names place let defined ok define placeused p one p two let say symbol common terminology player onesymbol player two symbol whatever symbol said ok firstprint board since matrix display rowscolumns format predefined functionality convertlist format need convert rows columns format predefinedfunctionality let us use numpy dot matrix functionality numpy dot matrixwithin pass name variable board takevalue board list format convert row column format printpurpose functionality ok print board say getinput particular row signifysaying allow place coin would place particularcell identified row number column number row get value inputuser row integer let type cast initially easier ok rowget input actually dependency mac system thats linux systems muchused particular type casting thing needed trivial things dependsoperating systems case using systemsrequirement always google get back correct method per systemrespect mac system ok type casted taking inputsay enter rowth position enter row values rowsallowed one two three allowed rows ok per humansperspective told counting starts zero giving one twothree per human perspective familiar computersunderstand indexing mechanism would ask mustdesigned anyone play game human perspective counting startsone thats giving like adjust upcoming steps get inputcopy paste ok column say enter column column one two threesaid value input person inputted rowcolumn already occupied type mistake somethinginputted value range board handleensure programme robots fault tolerance whatever faultmay occurring due users input must handle programme programmemust able handle say mistake able handlemuch possible one principle software engineeringmake systems friendly fault tolerant user commit mistake evensoftware may able handle must able display polite nice messagereason accepted please try valid thingsomething like courteously practice followed generally let uslet check valid input say ok place wouldcase invalid input repeat process need need useloop let use one turn infinitely till getcorrect input correct input correct input break correctinput row value row greater zero one two three greater zeroright value row less four one two three less four evencolumn must like column greater zero column lessfour must vacant column vacant using using hyphengoing check one board use row column row minus onecolumn minus one row minus one column minus one useshown indexing earlier computers start counting zero humans startcounting one taken input human friendly mannerconvert computer friendly manner deducting one showntime second row second column humans nothing one comma onecomputers subtract indices row well columncomputers works humans says second row first column nothing twominus one first row one minus one zero first row zeroth column computercomputer inter crypt different humans startcounting one computers start counting zero reason particularthing blank blank given hyphen conditions satisfied rowcolumn within range one two three greater zero less fournothing one two three column also deserve vacant positionvalid input break let play yes brokenloop corresponding let place board row minus onecolumn minus one nothing symbol whatever symbol wants placeplace functionality works please check displaying boardasking input enter row column value case enter faulty inputvacant position repeat asking inputs till enterask inputs get irritated say particularchecking whether input valid input valid input printsaying invalid input invalid input please enter polite messageunderstand ok made mistake asking inputotherwise may think fault system thats eventhough gave input asking people thinkprint message way understand easily important please noteimportant ask input long valid valid breakloop place particular players symbol see place players one symbol evennumber turn player two symbol odd number turn whatever symbol passwould placed position happens place doneplease see flow till may pause time seeyeah see missed one thing player one say breakplayer two say break one end nine turnscells occupied still one see tellincluded let us include say personplayer one see operator predefined onesay person true false says true applyingwould become false invert output particular thing invertwhatever truthfulness ok player two alsoplayer two symbol havent print draw okdraw also possible done okindentation important particular position column fiveend turns check nine cells occupied stillone means draw checking fine let changeindentation ok level yeah nine column ninefine ok please pass till understand flow programme next videosee functionality whether personrealised aright guys previous video seen outline gameplay method place method play method alternates turn playersx even number turns x odd number turns place methodchecks whether position valid one vacant one allows playersplace asks input till gives valid positiongame gone till let us see particular thing undefined letus define method define thing symbol argumentpassing symbol let us see check check rowscheck rows rows occupied check columnscolumns occupied consecutive manner check diagonalsdiagonals diagonals occupied check thingsreturn answer things occupied person seecheck rows check columns check diagonals intuitive us definelet us define one one check rows define check rows pass symbol ok needcheck three rows need use variable check let call row rlet call r r range zeros let say three r range threerow counter count initially zero havent counteroccurrence symbol row count initially zero let iterateevery cell row let use c column row three columnscell three columns right one cell belonging columniterate cells c cell column take anything crange three row three cells c range three let callsay board r c index contains symbol increment counter countequal count plus one use counter may casecolumn row x x third thing may casewinning placement xxx winning placement need count many timesseen symbol x using something called counter endloop iterated cell check value counter counterequal three row three cells three cells symbolwinning move print winning move let print particularsymbol let say person return true returningparticular functionality comes end case first row doesnt satisfy loopr check second loop check would done thirdrow check would done rows check donenone places encounter means winning movement alongrows case check rows thing winning due occupyingthree consecutive cells row along row person occupied threeconsecutive cells case say winning thing returnfalse person occupied three consecutive cells along rowmeaning hope understand check rows functionality otherwise problempause video dry run code definitely understand checkrows done check columns pretty much similar let copy paste copy letpaste ok check columns name indices change columnvalue fixed rows changed let change c r rows changecolumn value fixed rows change thats change otherwise pretty muchguess understand would let show see check rows fixrow check cell count check columns fix columnrow corresponding cell count dont understand please dont worry dry runningkey sit think like computer index table something like dryrun definitely understand easy requires amountthinking thats easy please make sure understand till ok check rowsdone check columns done check diagonals yeah show wait ok seediagonals zero comma zero one comma one two comma two general formatform comma values along diagonal diagonal differslet us three cells let us manually two comma zero one comma one zero comma twoplease make note values thats comma general format useloop something similar use rows columns caseneed use thing manually let us define check diagonals check diagonalssymbol check diagonal let us board zero maybe evenmanually problem use loop well manuallyanything zero two equal board one one allowed mathsprogramming use operator say board one one equalboard two comma zero one diagonals particular thing equalcorresponding symbol person let check usethree values using one comma one equal symbol case sayparticular symbol return true ok next along diagonalreturning case diagonal satisfied particular functionality wouldcome end diagonal satisfied control wouldtransferred check diagonal board zero comma zero equal boardone comma one board one comma one equal board two comma twoboard one comma one equal symbol return using loop wellleave exercise guys please try using loop simplify thing insteadusing many comparisons simplify alright case prettymuch let copy paste copy paste ok case cases didnt satisfymeans along diagonals winning move case returnfalse checked rows checked columns checked diagonals seefunctionality check rows check columns check diagonals one placesoperator works manner least one values true final answer truealong row along columns along diagonals winning movementwould return true person three places winningmovement return false personfunctionality works ok let save ok hope would understood code tillplease pause understand flow code really well proceed towardsrunning code try dry running said dry running best wayunderstand computers perspective please understand really well proceedinglet us run code see happens next videoalright guys previous video seen quote game playmethod alternates turn players even number turns x oddnumber turns turn place symbol vacant positiontake care input proper within range well position vacant basedfunctionality works checking winning moves functionalityone checks rows rows three consecutive cells occupiedplayer along columns along diagonals since using operatorworks fashion one value true final answer would truethree ways player occupied say false personsay something like functionalities works hopepassed asked dry runner hope dry run clearidea code works flow please make sureclear run code alright hope clear let us proceed towardsrunning code ok let run see extend matrix format askingenter row let said two comma two smartest movefour winning possibilities particular cell intersecting let say twocolumn also two see place cell x let could see initiallyboard empty said two comma two occupied occupiedwould give two comma two see saying invalid input vacantposition let give input one comma two position occupiedx turn let give input two comma one x turn playeroptimal placement chooses positionoptimal thing leaves opportunity next turn x may winshouldnt leave let say didnt predict next move couldchosen something else wants maximise winning chance x turnmay win x displays message x wouldwould seen important players equally smart try variantwell try playing way would definitely see draw players equallysmart alright guys thanks watching till please try different variant also tictac toe many variants browse online please try different kindvariant discuss discussion form variants discussedimplement strategies new things came acrossplease discuss everything clear learning best way learn please discusstas wish happy leaning nice day alright seen oneimplementations tic tac toe actually many implementations possiblemany ways also variants game well lookwould recommend try implementing variant haventdiscuss please discuss strategies take implement variantsexplain variants strategies take please discuss thingsdiscussion form happy leaningbox another box inside box another box insidebox another box inside box must wonderingcalled recursion let us discusssir may talk five minutes yeah sure sir actually would like showcomedy scene see always obsessed movies going discusssomething technical sir actually sort person actually seescomputing every walk life something generally use computing achaconcept clip would like show sure sure show clipyeah yes sir sir see happened isnt concept usecomputing namely recursion much thats good find vidyainteresting scene one thing try explaining exactly happeninghuh concentrate look several people right lets say fifteen peopleyes sir correct person first person asks question neighbour rightasks question neighbour kind caste gate continuoussee goes till first person fellow knows answertells answer caste gate comes back hits sourcebingo answer right exactly sort recursion works keeppassing requirement function inside function goes inside inside wellwithin last step comes back answer thats goodobservation vidya nice creative thank sir recursionpowerful tool computer science going illustrate standard examplecalled computing factorial number know factorial number easything compute fact five five four three two oneschool days right actually one twenty factorial let ustake look factorial number lets say six six times five times four times threetimes two times one observe fact six six times fact five meanmean factorial number one compute computing factorial number one lessmultiplied number fact n n times fact n minus one let thingone could write program compute factorial number thats goingeasy input n write loop equals one n sayanswer answer times initializing answer one pretty straight forward right bestthing computer programming one thing several ways toldcompute factorial number tell compute wayslightly complicated going introduce importantprogramming idea called recursion remember defined factorial numberobserved factorial n n times factorial n minus one define factfunction written n times fact n minus one whenever n greaterone n equal one simply written one thats programmewait minute defining function calling functions name withinfunction isnt weird actually nothing weird everyprogramming language gives facility facility calling function withinpython also gives facility see programme simply givefactorial number try understand happening computingfunction giving input number function calling another instancesure terminologies sounding complicated get used seeexamples recursion hello guys hope would seen concept factorialnumber let give brief view factorial numbernothing keep repeatedly multiplying number starting one till reachgiven number answer get nothing call factorialnumber let give example let us take number four start one nextnumber reached four yet take next number two multiply onetwo two still reached four take next number three multiply twothree six reached four take next number four reached fourmultiplication need stop till got six answermultiplication multiply four get twenty four answer sayfactorial four twenty four one two three four twenty fourcall factorial number start one keep multiplying nextnumbers reach given number n get factorial number n ngiven number case four n equal four given number n startone two three till reach n keep multiplying finalanswer get call n factorial ok would programmewould guessed procedure calculation said using iterationlet us said factorial functionality need let us definefunctionality factorial need find factorial given number n let define nok need start one go till reach n use loop rightloop uses function range deal numeric values would seenprevious videos till practice till range function would take askrange five would start default zero count till four would sayfive count one less want start form onewant count till n ok need tweak range function get thingdefine start value range function dont give start value tillgiven start value programs dont give start value defaultstart value taken zero tweak give start values well letprogram need store product let variable call productinitially one product one multiply anything getnumber answer keep multiplying start oneone two three four n done rightstart multiplication one let define something called productcarries value one initially ok let use loop iterate rangemove range numbers one till n need start one letrange give start value said start value one comma stop value whateverstop value stop one less want stop ten givingn plus one simple tweak range one nplus one one two three count n wanted takenvalue whatever new product taking whatever product tillmultiply hope understand want factorial threewhatever product one one two two till product twotwo three six take factorial whatever productcomputed till product particular value computefactorial end loop till reached n whatever keepmultiplying whatever product answer return productparticular functionality take number n find factorial returnanswer let use functionality definefunctionality going use functionality let take input sorry inputinput generally takes terms strings mac need type cast int macdependency thats may differ operating system operating system practiceget know operating system expects input syntax basedplease modify correspondent mac type castingtyping input let say enter number get number see factorialdefined positive numbers negative numbers factorial definedmathematically factorial defined positive numbers number zero givencase zero factorial defined one mathematical definitionsee defined product one case given zero range onecomma one go inside loop directly return value onelike dual advantage sort thing zero factorial one also one numbermultiply number get back number researchstarted initial product value one ok start give zeronegative number enter positive number let give clear message enterpositive number asking enter positive number user still enters negativenumber smart enough allow input checkn less zero negative number display message factorialdefined negative numbers negative numbers seecall fault tolerant major user mistake given inputactually incorrect throw random search terrifygive polite message understand mistake donerepeat one software engineering principle following n lesszero negative number say factorial defined negative numberselse let say factorial let say f factorial get back answer callfactorial n called factorial n return answer right answercaptured f print let print print let say factorial n fn factorial f wanted printed let save code letrun maybe give brief info take input check negativenumber negative numbers since mathematically factorial defined displaymessage define positive number start computing factorialfactorial computer start number one keep multiplyingconsecutive numbers till reach given number n end multiplicationwhatever answer call factorial return particular productprint factorial n printing working let usexecute programme let run ok asking enter positive number letshow let enter negative number see factorial defined negative numberparticular thing fine ok let run correct input positive input letgive number six ok factorial six seven two one two three four fivesix seven twenty displayed answer fine programmeworks fine way calculate factorial another way wellunderstand way please observe solution try try enumerating runningprogramme different inputs find pattern able crack patternunderstand alternative way calculating factorial thanks watching tillnice dayalright guys seen iterative version version use loop findsomething called iterative version iterative version repeatingsomething version called iterative versionseen iterative version finding factorial previous programming screen casttold observe solution could find patters hope wouldfound patterns using patterns solve factorial problem yetanother technique call recursion recursion nothing techniqueprogramming languages allow function call may sound confusingbeginning go rally easy see said want computefactorial four one two product two ok next time approachthree product till two two three compute six product till sixsix four twenty four got answer right observe needfour factorial making use values three factorial one twothree values six used compute four factorial need three factorialusing values two factorial dependency valuesneed larger values requiring smaller value compute larger valuedependency n factorial dependent n minus one factorial generalpattern could observe solutions mathematically also yet anotherdefinition one definition n factorial one two three till n anotherdefinition n factorial n n minus one factorial n minus one factorialwould n n minus one n minus two factorial ultimately keepexpanding would stop said zero factorial one stophit zero say reached n one answer tillwhatever multiplied multiply one nothing multiplying one answerwont change reached answer zero marks end proceduredepending smaller value larger value competition processstops point zero right place stop call base caseanchor case would write probably base case use green colourappears ok multicolour command basically appear green colourwould easier guess base case anchor case call nothing pointrecursion recursion nothing dependency somethingtype factorial n computation depends factorial n minus onecomputtered way apply formula n minus one factorialn minus two basically thing every timesmaller number multiply one two three hundredmultiply ten use find eleven use find twelve basicallybreak smaller things solving particular processbigger thing depending something similar smaller instance bigger value ndepended similar kind thing smaller value right similar factorialcomputation similar three factorial depended two factorial two smaller valuecompare three something like n depends n minus one n minus one intern dependsn minus two chain dependency process calledrecursion function calling smaller instance call recursionkeeps calling point stop calling say ok hitanswer arrived answer say particular pointcall base case anchor case point recursion stops callanchor case let modify functionality particular thing usediterative version iterative version let start recursive versionrecursive version said factorial n represented n factorial nminus one yet another way defining factorial function mathematicallyparticular way going use start factorial zero equal onenegative number occurs wont occur taking carenegative numbers given input dont even call functionalitycalling zero greater zero may worry handlingnegative numbers actual calling part handled worryingok thing going say first first step recursion always puttingbase case base case base case factorial zero one saypassed number n n equal zero return product right letbring use statement product initially set one right needed actuallyeven remove directly say return one return one return onefactorial zero one id n zero returned one elsereturn n n minus one factor n n minus one factorial callfactorial n minus one ok let give illustration actually run codecall factorial three let suppose let start smaller value easierextend value even factorial hundred anything extend thats issueok begins first check n zero three equal zero comeelse part see three factorial two value factorial three dependsvalue factorial two similar instance value inside smaller okparticular thing called ok factorial two gets called see factorial twotwo passed n equal zero two equal zero comes saytwo sorry two factorial one ok factorial one gets called okfactorial one gets called one passed one equal equal zero false comeback else return one factorial n minus one compute one sorry factorialone minus one zero ok ok factorial zero zero passed n equal zerozero equal zero true return one return one calculationgo upward direction ok let show upward calculation ok onereturned goes one level one level calculate one oneanswer one particular value passed one level ok two valuepassed one calculated two one calculated two oneone passed one level passed one levelcomputation breaks smaller numbers get numberget know answers trace back till get larger answerworking ok two one two ok let say let say twopassed already three three two three two okanswer six thing found get answer six answerpassed main function value called call factorial threekeep splitting problems smaller ones knows answerknow answer trace backward direction till get answer larger problemrecursion works ok woking recursion let us start new consolelet us run ok save save ok let console start okstarted let run file enter positive number negativity checkgiving negative number let give back positive number letsay five factorial five one twenty similar fashion break fivebreak four four break three three two two one one zerozero know answer use answer trace backward directionget answer one twenty recursive programme work hopeunderstand concept difficult thing easier one needpractice thats take examples try thinking fashion try breakingsmaller pieces get answer try constructing back actual answerhope remembering movie clip shown beginningvideo person would ask answer something person thing keepspropagating till someone knows answer get answer propagatebackward direction person asked question casefactorial three question asked main function question askedsir compute directly try splitting smaller instancesomething analogue us asking person whether knows whetherthing calculated checks even calculated splitcalculated split calculated yes calculate use answerpropagate backward direction guess understand shownmovie clip also concept recursion works really powerfulconcept computer science make institutive things easier codesomething intuitive us mind things donewould translate code may difficult iteration valuerescue recursion handy many situation would come across keep learningadvance stuff even stuff learned till recursiveversion problems please note iterative version wellrecursive version every recursive version equalent iterative versionuse anything convenient places recursion highlyintuitive easy minds application see next video thankswatching nice day alright guys hope learnt powerful techniquerecursion hope remember search algorithm studied previouslyprevious weeks namely binary search let give quick overviewbasically search dictionary telephone directory somethinglike take dictionary telephone directory words contentsdirectory sorted arranged ascending order arrangedalphabetical order apply technique binary search basically callssorted list want list arranged specific order either ascendingdescending calls list arranged order list want see whetherparticular number present list whether particular item present listwould would check middle list requireditem done else check less required number greaterrequired number accordingly branch left half list right halflist binary search works seen iterative version binarysearch previous weeks guess easier still easier thing likegiven intuitive version binary search like scan left halfscan right half something like given intuitive versionintuitive thing easily translated code use techniquerecursion let us see use recursion simplify process writing codebinary search let say define binary search binary search define binary searchneed list call list l need list l element x want findprocessing sing index values would seen till mayfamiliar still telling quick recap indexes computers starts zerohuman start counting one cut computers start counting zero counting startszero list five elements counting would done zero one two threefour zeroth element first element second element third element fourth elementcomputer counts give starting index ending indexrequired binary search right initially starting index zero ending indexactual end list entire list scan middle element keepdiscarding one half list keep searching half timechange para things need binary search need list needelement x want search need start end index list wantwont search entire list time search parts list discardingunnecessary half binary search works needed four parametersok let define said recursion requires base case base caseone element left list one element left list seeparticular element required element say yes required elementfound else say element found ok element found goingreturn value minus one going assume list positive values minusvalue list also going return position element goingreturn element even negative element dont mind lets find going returnbinary search basically going return position elementpresent list going return position starts zero rightelement found return minus one element found somewhereoutside list thats basically mean return minus one casefound base case base case one element one element list basecase one element list would start end wouldequal start end value one element startwell end start using start end indices start equal endwould check l start end use anything inter changeequal case equal required element x return start valuereturn position hence one element say suppose assume oneelement ten list want search fifty fifty present listone element say element found saidcode going use encoding going use minus one return minus oneelement fifty present minus oneth position meaning present okreturn minus one case ok base case base case true elseelements list case find middle elementdiscard unnecessary half search required halfsplit array halves search required halfright divide divide array halves thing needfind mid position mid position nothing start plus end put bracketneed calculate sum first divide two midpoint rightintuitive start start end midpointstart plus end divide two midpoint dividepossibility get value floating point may seven two three pointfive meaning position three point five either take threefour using functionality int type casting integerposition integer want integer first position second position third positionwant dont want three point five position use intconversion take three point five three four maybe runcheck int three point five let give three taking floor functionality floornothing integer closest greatest value integer closesttake number line three point five somewhere three fourgoing left side int functionality going left side taking greatestinteger two one everything present left greatest left integer threethree returned answer taken let start new console betterprogram new console ok midpoint computedcheck mid element required element l mid equal x casedone found element return mid element else checkgreater less would say l mid greater x means sorted listmiddle element greater required element search definitelyelement right half discard right half needsearch left half array would shrink starting position mid minusone mid position didnt element also chance midwould mid need shrink array till mid minus one positionone position mid till need shrink array returnresult binary search list element x start position changesee check left half array start positionend position precious end position previously bigger listwant split end mid minus one mid minus one mid positionchecked mid position didnt contain element x x smaller valuex l mid greater x meaning x lesser l mid x lessmid value present left half starting position till one positionmid whatever array left search array return answer mean seereally intuitive see left half left half using iterative methodrecursion easy translate intuition code easily use recursiveideology ok recursive way call left half array call procedureleft half array search left half else search right halfright half end value starting point different right searched till middidnt find position mid value x greater mid value wouldpresent one anywhere one position mid till actual end point rightstart value change would say return binary search result l x mid plus oneend modify starting point mid plus one till mid position checkedelement checking path midpoint checkingpath midpoint checking path midpoint left halfright half whatever intuitively mind translating codeeasily power recursion would recursively keep computingget answer take example given examplerecursion works factorial screen cast similar take list try applyingbinary search try recursion works would understood recursionworks particular search bigger list depends value searchingsmaller list whatever result get searching smaller list translatedback returned result searching bigger list binarysearch recursive manner defined binary search used rightlet give random list also change version ask user inputmany numbers want input input many number numbers tillpresses keys keep getting input guess familiarvarious conditional construes using modify code wish mottodemonstrate binary search would give smaller list twenty forty five sixtyseventy ninety list given please note given list sortedorder sorted apply sorting first get sorted listpass sorted list binary search binary search expects sorted listimportant please make note list input x valueuser ok let input value x user typecast inputmac machine type casting please follow per machine dependency inputenter search key search key would say number want search wouldinput search key user x binary search return indexlet store index equal binary search list l search key x starting positionalways zero bigger list initially start entire list zero end positionzero length minus one five element list four let generaliselet say length l give length list many elementspresent list return length list minus one ending indexinitially start search particular index suppose search keyeighty entire key passed would find mid value sixty rightygreater sixty half needed neglected particular thingexecuted seventy ninety new list list search keyseventy ninety taken mid value seen floor valuetaken value taken mid value eighty still greater seventy skipright half one element ninety case would executed ninetyequal eighty return minus five come know thingpresent something like works trace hope clearrecursion works clear binary search conceptunderstand need take pen paper traceexample work required easily understand concept okreturn index element present list ok got indexsay index enough normal user us element sixty presentthird position say two say computers doesnt know eventranslate human friendly format right basicallyadd one one represented zero index second position index onethird position index two basically whatever index returns add onedisplay user returns minus one say present zerosay element found print appropriate message first givecheck index equal minus one case print x value found ok xvalue found ok else print minus one caseprint x value found found position index plus one computers countingsystem humans counting system differ one thats adding onedisplay ok done let save code hope clearlist input search key even modify getting input listelement user sort list please note send sortedlist binary search occur sort list input search key applybinary search works one element list checkelement required x element x case return index else returnminus one whenever element found return minus oneencoded case list one element find midelement based mid element since array sorted discard onehalves element required exactly mid element done less midelement search left half discard right half searchleft half greater search right half discard left halfunderstand really well would suggest take twenty element listbasically try tracing paper basically understand clearly worklot papers less computers computers fraction secondhumans understand strategy requires practice please take pen papertake twenty element list randomly sort maybe use computerswell sorting twenty element list may take time usecomputer well sort take sorted list twenty elements randomlygive search element give element present list wellelement present list try understand various runsprograms really understand process easily practiceneed needed practice please practice practice practice thats let us runprogram let run ok asking enter search key let enter eighty eightyfound perfect ok let enter ninety let enter ninety ninety found position fiveperfect got entered eighty eighty found list says eightyfound enter ninety ninety found found position five saysninety found position five works would recommend please takepen paper work various example work list large elementswell wanted demonstrate recursion technique taken smallerlist already sorted list try different things unsorted list sort apply binarysearch huge list list get somewhere twenty element list try findsixth seventh element try find eighteenth element try find something exactly nearmiddle near middle something like try various possibilitiesunderstand actually logic binary search works needed practicepen paper keep practicing thanks watching nice dayalright guys hope seen examples recursion work yet anothermathematical function mathematical sequence would say easily computedusing recursion call fibonacci sequence let giveexplanations commands start coding going seecalled fibonacci sequence guess guys familiar still let givebrief overview fibonacci sequence starts zero one zeroth fibonaccisequence like computers counting starts zero zeroth fibonaccisequence zeroth fibonacci number zero let write one one thats better zerothfibonacci number zero sorry sorry zeroth fibonacci number zero firstfibonacci number one second fibonacci number nothing got twonumbers let put ok given got two numbers add two numbersgot result zero plus one one second fibonacci number thirdfibonacci number nothing add last two one plus one two two answerfourth fibonacci number one plus two three three answer fifth fibonaccinumber three plus two five answer keeps going keeps goinginfinite sequence basically initial two values nothing seed valuesgiven recursion terminology base case anchor casebase case anchor case two things know valuedirectly written value directly say value say firstfibonacci number directly say first fibonacci number one someone askingtenth fibonacci number something like dont know need calculateusing zero one find two using one two find three using two threefind four see bigger value fibonacci number nth fibonaccinumber depends value n minus one fibonacci number plus n minus two fibonaccinumber depend previous two values right apply recursioneasily find nth fibonacci number objective find nth fibonaccinumber fibonacci number iteration code case wouldleave iterative version fibonacci number exercise guys please tryeasy requires amount thinking herculean task somethinglike rocket science able need invest amount timeinvest amount thinking find iterative way findfibonacci number would leave exercise would demonstrate recursiveway ok let us start need define fibonacci would say fibonacci n nthfibonacci number want find know zeroth fibonacci number firstfibonacci number zeroth fibonacci number zero first number one case needreturn given n zero need return zero given n one need return onen zero one need return back n base case okgiven space well base case maybe put dashbase case derived base numbers ok base case let firstput n less two similar negative value n fibonacci definedneed check main part calling functionalityfactorial defined positive numbers zero zero positive numbersfibonacci also defined zero negative numbers defined let sayzero one right let say n less two return back n zero returnzero one return one like n ok else greater equal two twoonwards dependent previous values return back fibonaccin minus one plus fibonacci n minus two maybe want second fibonacci numberreturn fibonacci two minus one fibonacci one plus fibonacci zerocalculated fibonacci one one fibonacci zero zerofirst fibonacci number one zeroth fibonacci number zero zero plus one onecalculated right take previous two fibonaccinumbers add need third one secondplus first first one know value substitute one fibonacci number second fibonaccinumber dont know calculate second fibonacci number plus one gettingsecond fibonacci number call second first plus zeroth zeroth plus oneone one plus one two get third fibonacci number tracepaper understand working basically fibonacci numbers workless two return back value otherwise return back sum previoustwo values right intuitive way explaining fibonacci numbers seetranslated institution translated intuition code easily thanksrecursion powerful technique really made code easieriterative version write iterative version dont say iterative versiontotally impossible write iterative version requires amount thinkinginvested ok got answer take input n equal integer inputwanted type cast machine dependency type cast inputenter positive maybe say non negative zero also defined rightsay non even factorial please make correction non negativezero factorial one also defined enter non negative number enter nonnegative number input message got input get still needcheck case person mistake entered negative number shouldnt throwresults incorrect throw tell suitablemessage properly print undefined negative numbers n less zero meansnegative number whatever input given undefined fibonacci numberundefined negative numbers ok say fibonacci numbers undefinednegative numbers ok given fibonacci numbers undefined negative numberselse negative number print nth nth fibonacci nth correctgives first second put st nd properly formattingneeded would modify message instead smartly fibonacci number position sorryposition n call fibonacci n alright hope guys understand tillsee take number input non negative number zero positive agree negativenumber say undefined print message else call functionalityfibonacci n ok call functionality fibonacci n number less twozeroth fibonacci number zero first fibonacci number one something definedbase case us case return value n otherwise computesum previous two fibonacci numbers right input nth fibonacci numberfirst let verify let enter five enter five get five answermaybe enter four get three answer let verify first maybe findfibonacci numbers ok let run file ok enter non negative numberenter verification enter minus seven fibonacci numbers undefinednegative numbers yeah got proper message ok let test enter fourfourth fibonacci number three get three answer let run enter nonnegative number let enter three sorry four fourth fibonacci number three thirdfibonacci number two fine let enter four fibonacci number positionfour three yeah working let find tenth fibonacci number lettenth fibonacci number fibonacci number position ten fifty five maybe listnumbers like verify correct working definitelywork many value using program find fibonacci number nthposition sequence fibonacci sequence number present nthposition nth luckily one thing mathematic close computerscience counting starts zero nth number nothing humans counting style nplus oneth number pleas mind counting starts zero wouldrecommended guys invest time thinking iterative fashionrequires amount thinking make iterative possible donestraight forward requires amount thinking invest timethinking iterative style would definitely appreciate technique recursionlets something straight away intuition whatever understandsomeone explanation straight away try staring code recursion allows thingparticular thing difficult iterative way still rocketscience doable please invest amount time try iterative versionplease discuss discussion form tried iterative versionchallenges faced print sequence fibonacci sequence askingnth fibonacci number print sequence starting zero till nth fibonaccinumber try variation lot things pleased explore keeptrying examples understand recursion actually works thankswatching nice day six one two three four five six getanother chance oh six oh oh ok right one thats one thirty seven perfectfour one two three four game playing called snake laddersgame involves whole lot randomness place logic thinkingidea simple start two pawns see red bluestart one dice roll five start keeping startkeeping five lets say example roll two one tworolls roll bhawana three puts three whenever encounterladder climb whenever encounter snake snake bites see cometale continue see assuming climb like finally comefinally come case put two snake bites may cometwenty three thats rule game point anyone reaches hundredwins game bhawana think eighty one eighty oneeighty seven ok yah perfect play maybe play thinkgetting bite snakes lets go explaining game thinkget second choice dont think game get second choice hey comecheater cock lets continue one two ok fine accepttwosaw game simple rules anybody follow start playingimmediately roll dice move pawn accordingly assumelets say fifteen number fifteen roll dice get five meanspawn moves sixteen seventeen eighteen nineteen twenty twenty case snakecome units ladder going units game popularworld although originated india well known different partsworld variants game well aside seewrite piece code stimulate game two people simply sit frontcomputer play word advice since people beginning codeneednt worry much exact stimulation putting board displayingsnake ladder may required let us playing text lets seedonealright saw favourite game us childhood snake ladderplayed two persons let us play using computer programme hello welcomeprogramming screen cast snake ladder programming screen cast takememory lane played one favourite games guessalmost childhood namely snake ladders snake ladderboard would generally consist numbers one hundred arranged ten cross tengrid would snakes point ladder points ladder would generallytake board lower point higher point snakes would generallytakes board higher point lower point sort symbolises themelife life full ups downs would favourite game many peoplesomehow close real life scenario alright let us see shall playgame cool manner using python code computers alright letsget started getting started code show image snakeladder board got image internet snake ladder boardsaid numbers one hundred ten cross ten fashionladders somewhere well snakes somewhere sure would played gamechildhood journey memory lane alright would ask guysplease pause video moment make note snakes ladders boardvarious points transition ladder exampleparticular ladder starts twenty one takes eighty two particular snakesstarts sixty four takes thirty six like please make notesnakes ladders pausing video would greater interest uslater part code please pause video point make note snakesladders alright hope would paused made note snakes ladderslets get started coding part let minimise image let startedcoding part someone plays game two things supposecomputer someone going play game suppose show board callshow board functionality next suppose play players supposedplay end point snake ladder define snake ladderboard end point hundred hundred winning position player reacheshundred first considered winner two players would play one reacheshundred first consider game till game proceed caseplayer wants bought middle totally quit game players continuouslyproceed hundred considered winning position going configuregame said first suppose show board playersask play higher level abstraction details consideredgood programming practice abstract much possible like seeperson wants higher level overview would read would understandentire point hundred suppose show board play person supposeplay game expects someone higher level overviewconsidered good programming practice give higher level overviewcode must organised reading overview person able gethigher level idea code want del deep codemay allow del deep person need high level overviewmade go final details unnecessarily consideredgood programming practice purpose using different functions another usefunctions reusability want repeatedly something want reusewant use functionality various places functions comerescue greatly help reusability good programming practice usefunctions much possible higher level overview must easily obtainedone naming functions also recommend give easilyunderstandable someone also syntactically corrective say f one f two fthree function f f one f two f three doesnt give overviewfunction may contains twenty thirty lines code may wellrequirement code may grow longer longer maybeunderstand particular function say f one gohundreds lines codes understand good programming practicefacilitate good practice name function accordingly suppose functioncalculating matrix multiplication say example using matrixes gotnothing game giving example suppose functionperforming matrix multiplication suppose name matrix multiply goodconvention name person needs higher level overview getwithout getting deep code good practice please make note usefunctions much possible simplifies work greatly alright lets getsstarted get deep functions show board play twofunctionalities need say show board let closeimage dont think needed let close show board supposeopen image show board functionality functionality image fileimport image library package pil input image libraryimported image library let open image img object capturesimage image dot open suppose give file path image filepresent case present directory code givingfile name case stored image different path please specifycomplete path image shall opened alright image openedshown say image dot show open show pre defined functionsimage library would see said given namesunderstand image dot show lottransformations involved showing know computers deal every termsbinaries zero ones image understandable humans transformlot steps involved abstracted know sayshow show image enough us need del deep binarylevel information way functions must named open show selfexplanatory particular thing going clearly understandable htisshow board functionality currently going code play let commandalso important step return command showboard works go play let us written code show board let us seeboard shown go next functionality play save filerun see image shown image shown alsoboard shown functionality works fine problem let closeok next thing go particular functionality play seefunctionalities required play requires functionalitieslibraries imported del deep importdefine new functions make code readable give codeprobably maybe younger sibling maybe ten twelve years old sibling barelyunderstands english person seeing names would able understandchecks performed flow programming everything wouldclear make way modularised program particularprocess called modularisation like split split single units taskschunks like show board one particular task made chunk play onechunk play consist sub chunks making functionalities chunksanyone get higher level overview even test someone understandenglish names would able understand flow programmay check alright done show board functionality let us go playfunctionalityalright guys previous video would seen method show boardfunctionality mentioned written code board functionalityboard shown player pending play functionality let us seeneeded play functionality ok commander back want showshow board functionality works play require remove ashlonger command want play functionality find play saidgame two players p one p two let us save p one namewant personalised interface like player oneplayer two got sweet name need refer namehappy need refer name lets input name letsinput name input taken functionality raw input inputting stringtaken raw input string nothing set characters names generally consistscharacters right technically call string string use rawinput functionality input strings message displayeddisplaying maybe shall say player one please enter name looks good alrightdone player two well instead typing let copy pastemodifications wherever needed player twos name player twofirst would inputting player ones name inputting player twos name letcommand well completion sake input player one name input player twoname commands help us understand code later point timemaybe maybe find later easierdone sufficient number exercises want look back donepreviously time may confusions avoid commandswrite english format understandable us look back commandsget know syntax used would easierrevision needed using commands alright initially startingdont dice placed floor boardroll dice based number appears place snakeladder board ground let denote point zero player one points zeronothing command well initial points player one player one got pointzero alright ok repeated player two let copy pasteplayer two give summary four lines input player ones nameplayer two set initial points players zeroone variable denote whose turn let initialise zeroinitialise one well computers generally counting starts zerodone zero mistake even start one game playedcontinuously let say one nothing infinite loop game wouldplayed continuously put infinite loop guess wouldconfusion said reach end points game ends sayinggame played continuously possible wouldcontradicting doubt may become clear code proceedscheck inside whether end points reached end point reachedbreak loop break loop nothing come gamecall break loop infinite loop broken gamewould end reach end point check would perform later point alrightturn zero player one would check turn zero player one turn oneincrease value turn one increment one turn become one turnone player two turn two player one turn threeplayer two every turn alternated would observe pattern turn zero twofour six player one turn one three five seven player twocould abstracted way take value turn divide two takereminder zero turn player one otherwise turn player twocheck reminder operator mod denoted percentageusing turn mod two equals equal zero note single equal assignmentnothing assigning value zeros let value anything dont carewant zero use single equal check equalitydont want change value want fetch value want comparestandard value case use double equal symbol please note pointok turn player ones turn player ones turn alrightnotified player print message player ones name namementioned say turn player one turn message putsaid player may want quit game middle well giveoptions till reach points hundred dont want want quit even optiongiven matlab give personalised feelinggiving option well take choice c nothing ask playersapproval continue asks players wish players choice let say players choicecontinue next let call c c choice whether wantscontinue take anyway call c name choice wellusing c input see function used previously rawinput specialised function input strings nothing something like nameaddress something like input use raw input ask one zero onedenote wants continue zero denotes want quit game would inputchoice say press one continue zero quit get inputchoice zero choice zero scores quitgame let show scores points stored pp one pp two pp one pointsplayer one pp two points player two first player ones name mentionedplayer ones name quote points mentioned thingdone player two well copying pasting player two points player twodone mention points say quitting game quittinggame thanks playing something like humble message messagedisplayed come loop usergive personalised experience user using print statementsinstruction given computer get loop statement break breakstatement come loop end game basically thatsotherwise choice zero would executed would comeobserve indents indentation important level c equalsequals zero check would made user hasnt pressed zero doesnt wantquit would come directly line number forty indent levelsuppose roll dice let roll dice would get number letstore variable called dice roll dice stimulate happenshappens roll dice random number one six something onesix would come roll dice stimulate give instructioncomputer pick random number one six give instructionuse random package random library imported say import randomlibrary needed since needed imported say random dotfunctionality randint functionality randint requires give endpoints start value end value start valueone case end value six particular functionality would generate randomnumber one two three four five six functionality generaterandom number basically stimulation rolling dice alright generatedrandom number suppose display showed dice print diceshowed dice showed points captured variables dice dice showedpoint printed user dice rolled addmany number points already already points whatevermust add points let us p one variable p p one stores points playerone nothing whatever pint take add value dicenew points playing snake ladder sometimes may happenreach position may snake may ladder accordinglypoints increase decrease change occur stimulate let us saypoints one nothing check ladder particular points thinkpass parameter particular lineadd points add points guess name would clarifies commandsneeded pass explain placelanded rolling dice suppose check particular position gotladder got ladder points particular value particular value ppone points longer valid higher points would get higher valuepoints would stored using variable pp onecases hope clear clear deal deep particular functionalitycheck ladder may ladder positive thing increase points mayhappened snake check snake way check laddercheck snake two functionalities define later thingssometimes may happen points say ninety fiveposition ninety five dice showed six add ninety five plus sixone one dice board hundred stophundred would say particular check donesorry players player ones points changedsorry said check case addition processgone beyond end point case come back end pointcheck let us make points points player one exceeded end end pointsuppose say bring end point ninety five present six camesupposed go one one since board ended hundred stophundred stimulating functionality checkplayer goes beyond board beyond board check alrightsuppose print score say name player one name scorescore value pp one storing points player one alright reachedend points said earlier infinite loop may wonderreach end point quit game given infinite loopbreak loop performing particular check reached endreached end current points whether particular current points endpoint checking person reached end sorry used extrabracket seems sorry space particular player reached endsuppose print message player one name name supposed giveplayer one person game suppose displaydisplayed come loop break particular place using breakuser wants quit game breaking quittinggame one person reached end point check player oneplayer ones turn anything maybe possible right player one may reach end point player twomay reach end point perform checks player two well alright let getback turn else whatever done player one let usrepeated player two let us copy paste everything copy ok let pasteplayer two player two modify everything player two player two sorryplayer one sorry player wants quit supposedisplay points player one player two player twoplayer points added layer two player two alright player two player two playertwo player two player two player two layer two player two alright given roughoverview game let us save give summaryhappened till inputted name two players initially set pointszero variable called turn actually keep trackplay turns zero two four six player one one three five sevenplayer two keep track using particular operator modulodenoted percentage return reminder divisions dividingtwo reminder turns zero player ones turn otherwise player two turnone thing guess skipped skipper incrementedturn yeah increment turn right one player done givechance next personneed increment turn done alright playersturn checks performed let tell first sayturn asking wants continue quit quitting specify status tillmany person scored quitting game case wantscontinue rolling dice dice would give number one six randomnumber number added points possible particular positionmay snake ladder performing check snakeladder appropriately points would changed case processrolling dice points exceeded end point given example earlierposition ninety five dice showed six addition would give one oneboard hundred end point exceeded case bring backend point check performed performingcheck performing normalisation part displaying scorechecking particular position end point person reached endpoint declared person quit game quitting dueusers choice quitting due reaching end point differencething done player two well alright higher level overview playgiven check snake check ladder reached end threefunctionalities defined given namesparticular functionality suppose define later defining nextminutes lets see hope understood happened till maypause sometime look back happened proceed got piecestill clearalright guys precious video seen display board well higherlevel overview game playing used functionalities likefunctionality used like check snake check ladder define definecheck snake check ladder may let us start check snake check ladder initial viewasked guys make note points ladders pointsstart point ended asked guys make note hopewould made note based writing code first laddersaw eight say check ladder takes argument points specific pointsgiven checking ladder point ladderreturn new points crossing ladder returned pointsequals eight first ladder suppose printnotify user actual stepped ladder print ladderreturn new position ladder eight actually landed twenty sixreturn twenty six next ladder twenty one twenty one thing letcopy paste type ladder ladder lands eighty two returneighty two pattern continue ladders let copy pasteblock twenty one next ladder forty three taking seventy sevennext ladder fifty taking ninety one next ladder fifty fourtaking ninety three next ladder sixty two taking ninety six nextladder sixty six taking eighty seven next ladder eighty takinghundred end point havent stepped pointsdice rolled check whether ladder point ladderpoints points making check synch match thingsmeans stepped ladder get beck points addeddont bonus else ladder ladder return pointsaddition points increment points nothing change pointsreturn back got check ladder functionality works alright similarfashion write check snake functionality check snake first snakeforty four let check points aright event takes argument pointsparticular point whether snake points equal first snake fortyfour equal forty four print snake stepped snakeneed note player print snake snakes bring pointscome twenty two return say points nextsnake forty six right print snake print snake return value takesback take five return five snake forty six takingfive returning pattern points let copy pasteok next snake forty eight take nine next snake fifty twotake eleven next snake fifty five taking seven nextfifty nine take seventeen next sixty four take thirty sixnext sixty nine taking thirty three next seventy three takesoon one next eighty three taking nineteen next ninetytwo take fifty one next ninety five take twenty fournext ninety eight taking twenty eight else pointssnakes otherwise stepped snake snake changepoints return back points check snake madenothing simple shown board first videoasked pause video make note snake ladder startstakes based written code check special pointscase display message whether sadder snake ladder accordinglymodify points return modified points guess could get playfunctionality using see add points check pointsladder ladder get modifies points ladder would getback point similarly check snake functionality also works differenceladder takes lower point higher point step ladder snake takehigher point lower point step snake differencedidnt step snake ladder would retain points alright twofunctionalities reached end particular functionality realised let usrealise nothing del deep check code nothinggive code call realise reached end particular pointschecking whether reached end nothing particular points equal end pointsay true else say false logic plain thing end pointdefined check whether given value equal end point casereturn true true else return false works let savegetting error input guess input work input guess workyeah oh raw input use sorry confusion input inputworks alright almost done code everything defined see codemodularised well first thing show boardplay next step playing next step playing first showboard play highest level overviewwant know particular show board functionalityimage file take open show image particularfunctionality show board next functionality play functionalitymain functionality input names two players initiallyset points zero variable call turn denotes playerplay ask wants say person turn wantscontinue quit based wants quit quit gamedenoting status till wants continue roll dice basedshown dice add points check landed snake laddermodify points otherwise anything retainpoints basically add points check landedladder snake sometimes may happen process rollingdice may go board case supposed stop end boardcheck done display score saypoints exactly end points check reached end pointreached end point say higher level overviewvariable turn denotes play wants quit display statusquit otherwise roll dice add points check landed ladder snakereached end points quit game higher level overview detailfunctionalities checking ladder checking snake defined based boardshown check specific points particular point reacheddisplay stepped ladder snake appropriately return pointsland finally return hasnt stepped return backpoints change points thats things works reached endfunctionality check whether points person gotdefined end point check performed occurs continuously onecondition lead quitting game one player voluntarily wants quitgame second condition someone reached end point two constraintwo places game quit alright codedplease pause see till happened understand functionalitiesunderstand overview level well details depth proceed waymajor functionalities let tell deep wayconsider given big box open box get smaller boxopen get smaller box organised code understandwell clear proceed running programalright please pause understand wellalright till coded snake ladder game split variousfunctionalities easier understanding hope revised gonefunctionalities clear functionalities let us runsee board displayed supposed enter namemaybe let say abc first name first player name abc second one letxyz abc turn continue quit want continue diceshowed six see initial points zero abc score six dice showedsix snake ladder point score remain sixxyz turn want continue quit want continue dice showed sixcurrently status want continue yes dice showed threenine want continue yes place yes want continue gettinginteresting want continue wow player two upper hand goinginteresting play whole day good luck got great pass timegreat guys let quit gon na play tonight wont thinksleep tonight good happy gon na play hope guysenjoyed thank watching nice daywell luckily animation fantasy friend said great film makers steven spielberglet us open world animation next choice spiral traversinglooking pretty straight forward programming questions nothingchallenging questions would like give question actuallyisnt straight forward requires whole lot thinking course programming timelet pose question see animation whats happeningseeing white dots spiralling around going centre particular waycorrect easy us well isnt appears though pretty straightforward easy firstly even animation let go stepstep explain actually fill entire screen white dotesparticular fashion forget showed let us go step step see fourcross four entry numbers numbers one two three four five six seven eight nine teneleven twelve thirteen fourteen fifteen sixteen want numbers displayedfollowing way firstly one two three four must climb eighttwelve sixteen towards left fifteen fourteen thirteen nine fiveright six seven eleven left ten basically traverse tablenumbers way alright mean mean displaynumbers particular fashion let try clear nice exampleexact question input four create four cross four table likeprogram dont display create cell corresponds row columnisnt look first cell first row first column gon na call one comma onecreate list maybe tuple whatever comfortable use term onecomma one denote cell second one first row second column onecomma two likewise one comma three one comma four two comma one two comma twotwo comma three four comma four input dimension tableinput five come five cross five table six six commasix n general going n cross n given four create four cross four tuplesone comma one one comma two want display following orderremember spiral thing showed want order meanobserve one one one two one three one four two four three four four four four three fourtwo four one three one two one two two two three three three three twoorder must display see getting given n cross n tablemust spiral n like spiralling n must simply display addresses cellssimple input number ten must create ten cross ten tablespiral n table display remember started little graphicsanimation every simple straight forward one looks like animation animationdone forty years back animation sophisticated right farregarded animation practice exercise wanted understandsomething simple requires good amount thinking spokedisplaying entries table right going use right going showcreate graphics animation using simple idea taking ndisplaying n cross n cells particular way know enough go ahead writequick program animation let us see done amit showuse knowledge displaying cells table create graphicanimationhello guys video little bit different going kind animationorder animation dont need pre requisites dont need knowgraphics libraries two things need understand storerepresent matrix python second print different orders video maincrux programme print matrix spiral order meanspiral order means start first element represented lets say zerozero comma zero print first row go last columnprint last column elements last column last row reverse orderfirst column reverse order important linkinganimation program write program traversingmatrix spiral order animation able make somethinglike exactly spiral order traversing matrix see printingfirst row last column last row reverse order first column reverse ordergo like center order perform animation dontneed understand kind graphics need know print matrixspiral order use logic animation video writeprogram able know create kind animation kindpattern easily lets see next videohello guys lets see matrix screen four cross four matrixelements one two three four five sic seven eight nine ten eleven twelve thirteen fourteenfifteen sixteen usually print usually whatever lectures saw tillwhenever using matrix printing traversing usuallytraverse row wise manner mean row wise manner see matrix firstgo first element first element one present zero comma zerogo print go next element next element first rowsecond column two lets see go secondelement print go third element present first rowthird column three next element four first row last column printingfirst row shift second row first column first element second rowfive go six seven eight second row third row nineten eleven twelve third row fourth row thirteen fourteen fifteen sixteen seeusually print like program going goingsomething else going print elements matrix lets say differentorder spiral order lets lets see mean spiral order supposematrix start one first element print elements first rowone two three four shift second row printelements last column eight twelve sixteen print elementsremaining elements last row reverse order fifteen fourteen thirteenfirst column remaining elements reverse order nine five onealready printed left second row print elements simpleorder left six seven go third row print elevenprint ten four cross four matrix ten middleelement going perform know print something likeneed add library going use turtle librarylibrary rather printing elements print kind dot coloured dotlook like animating something exactly going letshello every one video going write program spiral traversalmatrix first program going make two programs first programprint matrix spiral order saw last video seelets let create function name spiral def spiralparameters function number rows n number columnsmatrix actually list list representing matrixlet define two variables one k equal zero l equal zero let tellvariables k actually starting index row zero l startingindex column also zero know number rows matrixn number columns matrix let write term guys alreadyknow want command multiple linescommand multiple lines let write k index starting row l indexstarting column ok first print first row first rowfully printed shift last column print elementslast columns let write loop see k k index startingrow starting row index k less l means k goingelements row exhausting rows getting rowsprint anything rows k less lless n mean l starting column index columnsexhausted rows end columns exhausted stop loopok k less l less n first since starting firstprint elements first row let write looprange see elements first row ok exhaust elements columnsgo first column index second column index keeping row fixedgo first column second column third column fourth columnrow index fixed traverse column range l n keepmind n whenever type range range starts suppose writeparameter give range zero comma five go like zero one two three fourfive ok hence writing n n number elements numbercolumns ok suppose give four go l zero zero one two three fourtimes go four four safely write n ok inside loopprint elements print see row fixed ok write kfirst k index first row print traverse rowcolumns column index row fixed row zero print elementsfirst row know print elements one line spacelike apostrophe inverted comma sorry awesomefirst row go second row see go second rowfirst row one two three four go second row second rowimportant see second row second row print elements lastcolumns eight twelve sixteen traversal column fixedtraverse remaining rows see remaining rows second row third rowfourth row column fixed column last column seedont forget let command commanding best practice everguys command every time whenever write code revisitunderstand wrote anyone trying understand program tryingreinvent program use program understand bettercommand let write print first row printing first rowreaming rows elements first row printed first okgo second row k plus equal one meanssecond row row index increase k row index started zerofirst mean second row k equal one print elements lastcolumn traverse route remaining rows ok columnfixed let write range column fixed remembertraverse rows k already incrementedk go remaining k last row last row index numberrows print print traverse row column fixedbought n minus one n minus one saynumber columns suppose number columns four since everytime list starts zero suppose number columns four numberrows also four put two order last column put threearrays list always starts zero three array put putting nminus one put k k already zero dont take care minusone take care write end equal grid lastcolumn last column means shift columns second lastmean second last since n pointing lets say number rowsnumber columns four four n pointing four n minus one threeshift last column second last column n minus equalone let command line printing last column form remaining columnawesome done tricky part lets see lastsecond last column last row second last column print oksee tricky part print reverse order reverse ordersixteen fifteen fourteen thirteen go reverse ordercheck number rows exceeding row indexexceeding number rows see already checkedloop might happen condition k might become thats fiveopen escape five comes stating conditionbugging program put condition insidefine write range ok startsecond last column already decremented n minus one already secondlast column since n number columns start n minus one gogo first column first column index zero might happen sincegeneralised program might occur might go zero mayexample part printing eleven ten go ten dontgo nine ten eleven ten ok go go last startingcolumn index starting column index zero ok zero mayzero time write n minus one range rangedoesnt go doesnt include value doesnt include value need valueneed l minus one go l l since going reverse directiondecrementing n minus one n minus two n minus three n minus four l gowrite thats minus one minus one step default step always onepositive one always go one two three four five suppose want go five onefive four three two one write start form five zerowant go one n minus one let five four three two one step function okgo l minus one inside print array n minus one row rowminus one start last row last row n minus onenumber rows hence play thats great done last row okdecrement rows ok last row want go second last rowprinted elements row go second last rowdecrement row index row index mean number rows minusone done next let command line dont printing lastrow remaining rows ok left second last row printelements second last row print ok second last row print elementsfirst column reverse order ok reverse ordercheck l less n ok l less n inside writeloop range minus one already decremented want startsecond last row second last row first row go first row kminus one ok go k whatever k k one thingsecond row printed elements first row incremented ksecond row want go till second row thats writing k minus oneok step function minus one decrement okwrite print l thats awesome done increment llet tell l l starting column index printed first columnelements first column go second column printedgo second column thingthing next thing next thing next thing nothing sorryloop take care ok thats wrote loop let commandprinting first column remaining column awesome done programready printed everything let create array lets array ok rangemany rows want want four rows j range ok columns let create index listl let write elements like one two three four five six seven eightnine ten sixteen take count variable put oneappend count variable increment ok elements j take carerows elements four first row lets say first loop first loop jappend list l whatever got loop arraymatrix dot append l thats callfunctions spiral number lets say rows four number columns four letssee ok lets see sorry cool got spiral traversal one two three four eight twelvesixteen fifteen fourteen thirteen nine five six seven eleven ten yeah one two three foureight twelve sixteen fourteen thirteen nine five six seven eleven ten coolcheck write different way one way writing programspiral traversal write different way also create logicanother way known recursion covermight get little bit complicated cool may check depths writerecursive program print elements spiral order see going uselogic spiral traversal main program creating patternhello every one last video saw traverse matrix spiral ordervideo see create animation saw first videogoing use library named turtle installed anacondaturtle comes anaconda check simply installpip search try searching install turtle pip everything oneline one command install turtle read turtledocumentation provided turtle library see lot functions lotfunctionality given let examples use examplesunderstand create animation turtle actually used create patternsthats exactly show showed firstvideo lets see order start first create simple turtle program showworks lets see first import turtle library import turtlethats ok create turtle turtle kind pen workscanvas create variable tur lets say create canvas turtle dotturtle turtle created want create simple square boxwrite loop range five forward pen tur turn saying pencanvas pre define starting position forward tur dot forwardfunction fifty units ok got provided fifty unitsturn pen position within angle ninety degree use function dotwrite always take parameter angle take give ninety meansturn ninety degree thing ok thats donewrite turtle dot done great let run cool got square see workingperfectly ok lets something else let create loop lets say fifteen stanceschange angle lets say one forty four degree lets see happens somethingwrong let run ok see see created star usingcreate lot beautiful patterns different colours ok great going uselibrary create pattern spiral traversing animation depth saw firstvideo going create exactly animation turtle library thankhello everyone last video saw use basic turtle mean use turtlelibrary create basic programs basic pattern programs basic animations useuse turtle last program spiral traversing createpattern creating animation dots printed spiral orderprogram created created traversing matrix spiralorder use programme create animation let first import turtle importturtle default whenever turtle created canvas created default whitevalue background colour white going need background colour blackcreate canvas black background turtle dot bg colour black okcreate turtle name seurat create write turtle dot turtle created turtlewhenever going traverse towards matrix going print dot needcircle kind thing need width variable create width variable size letsay five height variable size seven whenever go particular elementprint thought move forward distance need distancewrite distance dot underscore distance lets say twenty five ok createcreated turtle need initial position start setinitial position dot set position minus two fifty comma two fifty changeposition according program keeping minus two fifty comma two fiftyactually starts centre always starts centre put zero comma zeroposition turtle centre canvas need left topleft corner keeping x coordinate minus two fifty coordinatetwo fifty see need colour dot white backgroundblack write dot colour white great inside loopgo ok whenever print first row printing first row going firstrow turtle position angle ninety degrees move angleninety degrees go downwards order go downwards putdownwards put position turtle move position turtle withinangle ninety degree print first row usual meango forward right direction print downward directionfirst row create variable check lets say flag f zero okprinting ok check f equal equal one means already printedfirst row move position mean direction turtle angle ninetydegree right ok printing first row dont need print arraycommand instead write ok dot forward distanceput variable dot distance ok print first row need set flag valuemeans ok always turn position turtleangle ninety degree right side thats created flag value left ok donefirst row first row ok print elements row printcolumn mean first iteration printing last elements last columnprint downwards way change angle turtledownwards means right ninety degree dot right put ninety degreedont need print elements command write turtleforward turtle dot distance change direction turtleninety degree dot right ninety thats also printing dont needcommand instead printing element forward turtle forwarddot distance thing printing last row mean row reverse orderchange direction right ninety printforward let copy forward distance ok great dont needarrays printing array need count value okcall let change parameters ok let valuetwenty rows twenty columns ok done write turtle dot done lets runcool see created spiral traversing getting lines oklittle little tuning get created get created first videosaw first video exactly wanted takeprogram change whatever order want change main program actuallyfill colours change shape something else okmain program ok thankprogram two things first created list colours letzoom ok first created list colours list colour white yellow brown red bluegreen orange pink violet grey cyan give lot colours check top linesecond rather printing line forward positionturtle print line create dot also function ordercreate dot known turtle name dot dot create dotway want create ok create small dot colour colour wantcreate random random basis writing different colours okthats first remove lining pen removelining pen write call function known penup penupmeans create simple line rather call functiondot function create dot go forward time forwarding printanything penup putting penup print anything whenever printcall dot function print dot move forward thats thatsexactly every time calling randomfunction see call randint zero ten zero ten means withinspoiling colour list using colour every time colourchanges randomly pronoun pattern pronounwrote last video little bit tunes createprogram change recommend guys please change programcreate pattern using parallel order different things alsoone thing rather going first elementpresent zero comma zero going middle element start middleelement go go reverse parallel order first elementprogram hopes like yeah show spiral order like dot evencreate shapes rather dot see turtle documentation createdifferent shapes actually create shape also anythingrandomly changing colours picking random colour form listrandom colours defined variable put programwrote last video thats fun thats nothing elseplease post questions whatever problems facing regardingvideo discussion form would like help guys program learninteractive programming python please please would like guyschange program make something else new ideas please please postdiscussion form thank hey guys suppose asked go remote placecity would first thing come mind course wouldgps next choice gpshello friends welcome yet another joy course must aware gpsglobal positioning system something let share location whatsapptrack route using goggle maps gps actually network satellites help trackinggeographical locations individual keeping technical stuff aside let givenice motivation joy assuming story time back one friends owningpizza delivery company calls complaints late deliveries customersinstalls gps tracker delivery bikes hoping would solve problemsinstead giving location name gps tracker gives raw information form latitudelongitude information order help friend need write code helpstrack route delivery boys using python course yeswell amit rescue lets findhi guys video see given set routes plot route googlemaps going use two languages gm plot csv libraryexactly whats problem let explain given set plots okplot routes google map supposefile named route dot csv coordinates coordinates means firstnumber shown near latitude second number shown longitudeseparated comma thats file name route dot csv csv means dot csv fileformat comma separated whatever values separated commaopen file spread sheet also simple text editor recommendguys use blind text use simple text editor suppose listcoordinated video saw guy wondering aroundbicycle manager put gps system bike seeroutes going whether delivering correct locationwondering suppose get information file dot csv filelocations person went know plotnumber doesnt make sense dont know dont knowwent exactly way plot video seeplot google maps see routes followedvalues lets tuned lets see next videostart plotting routes let go route dot csv file one timesee pass file using csv library said last video knowroute dot csv file well need coordinates separated commas mean firstvalue latitude value second value separated comma longitude valuefirst step pass data extract information filepython lets see create new new python file name gps dot pyimport csv library read csv library goggle nicedocumentation read functions data provided library pleaselook using simple passing method pass csv file letssee import library first import csv ok csv file name wantpass name file route dot csv open file open route commasroute dot csv green board dont write anything f would sayput variable name ok opening use radio function createvariable name reader use csv reader function pass fcreate iterator file ok iterate readvalues one one list reader variables data csvfile iterative iterate iterate usingloop lets say row reader ok row give row contain list itemlist value separated comma first first value secondsecond value comma third third value comma likestring let print store first value lat equalrow zero ok zeroth element list contain first value long equalrow one first elements contains second value longitudeprint print lat print long create dummy print get new line characterthats let run cool see latitude longitude valuesextracted printed ok suppose try sum let printlatitude longitude last print statement printlat plus long ok print sum values let run coolsee sum latitude longitude ok problem exactly sumgetting concatenation two strings said float valuesstring values getting concatenation string valuesplus python plus two strings concatenate stringsgetting concatenated value order get sum latitude longitudechange type cast say type casting c meanschange string value float value need function float insidechange string value float lets runrun see getting sum one six point three four zero sevenknow pass simple passing head csv file requiredprogram next video see plot latitude longitude valueknow pass csv file using csv library plot google mapneed different library name gm plot let import gm plot seewhether present anaconda cloud put gm plot import gmplot lets see see written error module found error module namedgmplot means module present anaconda cloud might happenlooking new module anaconda time moduleslibraries present anaconda thats recommended anacondalibrary new libraries still pending present anacondacloud download one thing list librariespresent anaconda type terminal conda list listlibraries downloaded conda present conda cloudsee libraries present conda cloud ok see gmplotgoing download order download anything condasearch search conda command conda search gmplot searchgmplot named conda cloud cloud whether present channelpresent download might happen may library lookingmay present see package found error thrown conda librarypresent channels case download packagepip download pip install gmplot pip install gmplotautomatically taken anaconda ok says successfully installed gmplotone point two point see let try command seeimported means use library ok great let delete okimport csv library import csv next import gmplot gmplot importgmplot ok go read gmplot googleread gmplot get get library gmplot radio materialdiploitation provided place map create polygon createmarker draw see things present depend look oklets see import csv file csv library gmplot library nextplace mine map particular location function let createvariable gmap equal see also place map particularcoordinate location want place map particular location need writelatitude longitude value location use google map plotterfunctional gmplot see put latitude longitude zoom resolutionexactly thing going gmplot dot google map plotter ok seeshow argument centre latitude center longitude zoom putlocation twenty eight dot six eight nine one six nine one random location putchange accordingly whatever want put three two triple four eightlet zoom resolution seventeen gamp contains map locationwant plot second thing want create icon icon going useplot routes copy line ok carry muchcreate icon going use google icon copyline get icon ok icon map readpass csv file plot know pass open open route dotcsv file dot csv ok f create reader iterator using csv dot reader functionpass file let create variable name k using k use let passreader iterator iterate row reader ok row give listvalues present csv file need two values latitudelongitude ok store latitude longitude lat equal row zero sincestring value need float value convert float thinglast video store longitude value float row awesomelatitude longitude values float values going use k dummy variablek equal equal zero means first time first coordinator leftgmap dot use marker marker function put marker function putmarker particular latitude particular coordinate latitude longitude putmarker lat long value first lat long value colour letput colours yellow ok make k equal one meansfirst whatever coming something else want elsefirst coordinate means k also k value zero means first valuealready k already put yellow mark whatever coming firstcreate creating marker particular latitude long colourblue ok done since last latitude longitude value lat long lastiteration contain last latitude longitude value would like place readmarker put gmap dot marker lat long colour red thats lastlocation put red colour marker done draw map gmap dotdraw html file thats may dot html going run ok createdmap dot html let see go folder say let open chromesee since yellow starting means first locationok first location delivery guy started went till particularstreets blue coordinates given gps devicegoing somewhere see locations went bluelocations red location last locationeasily plot coordinate coordinated plot google map usingpython easy though didnt use hard core programming many librariessimple things thats python popular lotthings lines code lots library communitystrong thank hello guys welcome programming screen cast programmingscreen cast would seeing data structure python offers please dont getterrified term data structure nothing way arrange datacall data structure simple terms python offers lot data structuresseen previous weeks seen list extensivelyusing lists also using future dictionaries seendictionaries rock paper scissors game guess see yet another data structure calltuples data structure name tuple maybe guess see font sizeincreased data structure name tuple call tuple basicallytuple see right initially start creating tuple create tuplelet say want store ice cream flavours like let us say ice cream flavourslet say ice cream flavours equal name tuple thats variable namesay create tuple need use normal paralysis normal brackets openclose bracket within need give items tuple one maybe sayvanilla say chocolate butterscotch strawberry maybe say strawberrygive number flavours alright let press enter alrighttuple got created say ice cream flavours see got tuple vanilla chocolatebutterscotch strawberry whatever added use way printusing print ice cream flavours think pressing tab keygot auto fill please note using console explain usingconsole feel screen doesnt appear familiar maximisedconsole thats press enter see got tuple ok want print oneone simple like use loops lists dictionaries somethinglike say something like use loop ok let us see print elementsone one simple like used loops lists dictionariesprevious data structure whatever data structures seen use loop printelement individually wish let use loop say flavours flavour icecream flavours variable name start loop say print sorry printsay flavour used intuitive name use variable name janything use even though tuple ice cream flavours using variablename flavour got one one vanilla chocolate butterscotch strawberry alrightprinted elements tuple case want access individualelements would want print chocolate let us say wouldlet us see chocolate second element list like tuple let likelist use index indexing mechanism let say printtuple name ice cream flavours index give second thing let givetwo letters see happens butterscotch see third one gets printed say twothird one list got printed mean indexing mechanismpython uses different starts counting differently starts counting zerolist start counting zero index zero vanillaindex zero chocolate index one butterscotch index two strawberry index threecounts start counting one computer starts countingzero want second item give index one get second itemper view per perceptivity second item computer first itemstart counting form zero let us print print ice cream flavours onesecond item actually print see got chocolate second one actually listalright access item simple nothing give name tupleice cream flavours use square brackets give index decideditem present say let say three strawberry got printed let say let typosay thirty see tuple index range throws error case item indexnumber thirty instead printing three let case printed typed thirty typoerror given index thirty list says index rangerange index value tuple zero one two three allowed valuesthirty range error means throws error right let us seelet us summarise quickly created tuple ice cream flavoursaccess individual element create tuple used openparenthesis inserted item access elements casewant change something example dont want butterscotch instead would likeadd black current flavour want modify element want add somethingnewly would let see let say tuple name ice cream flavourslists update functionality let us try way accessingelements similar way list using indexes let us try updating wellfashion list let us see ice cream flavours index two rightbutterscotch let remove want make black current black current clackcurrent made dont need underscore string basically ok black currentlet press enter see throwing error tuple object support item assignmenttelling something ok let try adding new item zero one two threeright want add index four say index four black current tryingadd initially tried modifying allowing ever reasons let tryadding error thrown probably delete initial valuereassign value probably tuples work let experiment let say deletekey word used dictionaries delete del ice cream flavours two let saytuple object doesnt support item deletion oh even doesnt work let ask helpdelete question mark give hint delete found happened omg deleteice cream flavours let check let ask help tuple empty tuple askquestion says empty tuple says delete individual itemmodify item add item delete individual itemdelete tuple completely delete entire tuple basically tuples sort datastructures fixed fix something remains like forevertechnically call immutable knowledge biologywould heard term called mutation nothing changes genescall mutation terminology using well calltuples immutable make changes like made listdictionaries use tuples tuples fix something fixed foreversay delete ice cream flavours entire tuple would get deleted let check callice cream flavours call says name ice cream flavours definedoptions supported create tuple access elements tupledelete whole add anything modify anything delete single itemnothing sort done sort foxed data structure alright seemsrestrictive right option thing done tuplelet create toy tuple example create toy tuple let use numbers onetwo three four given deleted ice cream flavours tuple creatinganother tuple demonstrating else done like length functionalitylist used demonstrate length toy say four length functionalityused case want see count use count functionality wellwant retrieve specific index element position particular elementpresent see toy dot count want count number times number twooccurs occurs one time says two toy count one let change tuplelet making one two three four five one two three four one two threefour five made new tuple basically see initially toy equal one two threefour ask said tuples immutable changechange happens thing created alreadygets destroyed something new gets created thats happenschanging try modifying way old one get destroyed whateverseek would remain fixed change alright let show lengthtoy initially four say says nine earlier copy completelydestroyed show functionality count toy dot count let say manynumber times number two occurs occurs two times number four occurs two timesnumber five count function many number times particularitem occurring tuple tuple give numbers initially ice cream favourexample gave strings give anything even floating point value giveanything see applications different types values given tuplescount one functionality functionality index let say toydot index five let say five present index eight say say example twopresent index one says see two present two places indexfunctionality returns first index left particular item presentindex functionality functionality list lengthcount index used tuples also something listtuple modifying element adding new element deleting particularelement things allowed tuples sort defined fixedrestricted data structure used post question probably wouldthought guess even create even useful courseyes used many cases example wills say say example dealingrainbow rainbow tuple say colours rainbow violet vibgyor rightindigo blue green yellow orange red defined rainbow oneadd delete undo anything want rainbow consistseven colours fixed dont want anyone make changesscenario make use tuples one scenario would useful rainboweven toy example consider showed illustrate somethingfixed nature change change scenario usetuples one thing computer science use tuples say imageprocessing images individual unit image called pixelbasically like human body contains cells cell basic unit human body somethinglike basic unit image called pixel pixel would wouldstudied school physics colour represented terms three basiccolours namely red green blue every colour colour represented termsproportions red green blue taking ten percent red forty percent bluerest green something like proportions red green blue denotecolour every pixel colour image case image grassnatural grass top portion sky blue valuedominant bottom portion grass green valuedominant case sand yellow represented termsproportions red green blue see every pixel variation colourscolour represented proportions red green blue basically pixel probablywould defined like pixel one maybe millions pixels image dependscamera resolutions would seen five mp camera eight mp camerathirteen mp camera heard days right may different pixels dependscamera resolution number pixels increases clarity image alsoincreases pixel one contains colour say yellow colour may something likepoint seven sorry zero point seven comma zero point one comma zero point twosomething like proportions red green blue rgb orderrepresent pixels case internally represent pixels terms tuplesdont want change proportion image dontwant change time say particular pixel configurationcolour associated pixel applications computer science tuplescome handy alright think many applications fixsomething dont want change scenario encounter scenarioconsider using data structures tuples alright guys thanks watchingprogramming screen cast nice day ever tried luck gambling wellshouldnt let us find next joy named lottery simulationwhats matter look worried yeah share something okbrother mine gambles whole lot tried convincing several timesmean continue path never listens feels earningwhole lot force lose everything one day really botheringkind gambling ok let explain system ten unitsbets one unit wins get nine units loses littleless invest hundred rupees yes win get nine hundred loselose hundred rupees yeah precisely actually deceptive yeah feel thoughmake lot money yeah thats feeling loosing forcetried counselling yeah tried several times told never givesear ok else done thats thinking tried see tryingseek help possible simulate computer okwant see whether whether simulate process wining loosing yeahgame gambling yeah want see whether one become rich one undergolosses yes precisely see educated help assuresee right path actually happening thinkpossible popularly called gamblers rule problem probability asidewant see simulate enter process gambling try figuresomeone even win course win times lose lot timeslets say play one years time three sixty five days would like see whethermake lot money right yes good try helpsimulation even give plots ok happens keepplaying next days months years ok inference starling enough makeeducated brother stop gambling yeah lets try best though guaranteestop gambling gambling disease tough people comeproper counselling making people understand math behind might getconvince go back upraise oh computer reallygrateful possible lets try guarantee tellhopeful proper counselling ensure make educatedperson understand gambling dont work hello guys welcome programming screen castlottery stimulation let first introduce lottery simulation let givebrief overview hope seen previous video procedure lotterysimulation lottery explained give brief overview basicallysort coupons available bet one particular coupon drawcoupon randomly available list coupon betted coupon couponappears matches win playing game supposed placeamount win get something much paidtry tempt play lottery let explain let take quick scenarioexplain let assume ten coupons basically couponcontain digit number one ten one two three like ten one numberpresent coupon like coupons coupon contains digits oneten supposed bet something say say number seven appear drawsay listening bet seven draw coupon randomlyrandomly drawn coupon contains number seven win otherwise lose playgame pay say hundred rupees win get lucky gotnumber win get say thousand rupees ten folds see getting back ten foldseven say nine hundred rupees anything getting much payingreally tempted play game let us see happens play game getlucky get much paid get unlucky lose hundred rupeesbig deal let us try happens let us try simulating simulateuse something called random randomly picking one couponavailable coupons right going use package called random let us saysay import random hope used package sometime basically dealsomething happens probabilistic thing randomness use packagerandom say bet bet something number let sayget input bet bet number get input input knowwould generally take everything terms strings type cast changeinteger type let int input ask betsay bet ok got bet user got bet stimulatelucky draw let say lucky draw lucky draw take couponrandomly contain number one ten stimulate use functionrandom package random dot randint functionality donesupposed pass two parameters b shown number form brange number want one ten one tenone ten end points also included number pickedone two three four five six seven eight nine ten one ten numbers could pickedeven bet something one ten let make statement clearbet one ten let make clearer inputted value askedbet could see asked betting let findinputted number want bet stimulating lucky drawgetting another number needsomething called account right deposit money winning letsay account initially nothing got organisers gamezero get lucky betted number well one got luckydry turn equal double equal symbol usingequality check use single equal assignment change value signwant check equality dont want change values using double equalsymbol equal lucky draw accounts happens whateverearlier along amount say nine hundred rupees gets added play gamemuch spent hundred rupees deduct hundred spenthundred hand added nine hundred rupeesplace nine hundred got added spent hundred rupees net gain eighthundred rupees getting account get lucky didnt get lucky nothinglose hundred rupees else didnt get lucky else happens lose hundredrupees let say account nothing deduct hundred previousearnings earnings spending deduct ok end gameaccount print ok see playing get input betnumber lucky draw happens number drawn randomequal bet win nine hundred rupees else dont win anything playgame pay hundred rupees deducting hundred casesend game account playing gamelet us see let save let maximise consoleget output right let maximise portion let run runrun ok bet one ten asking let say bet seven minus hundred seelost lost actually dont know want see happened luckydraw case let print modify programs slightly let print lucky drawprint lucky draw whatever value lucky draw want print well whateveraccount print let save program let maximise portionmaximise let run asking bet let bet fiveturned four lose ok let try run time let bet twoturned ten lose losing continuously ok luck let trysimulating multiple times see happens let us see next video helloguys last video seen happens try betting would appearresult lottery draw got lot losses run rightplay multiple times possibility get lucky win lot price let ussee let assume first go play game one week seeone week seven days seven times get input slightly time consumingalso irritating users think seven times entering input letsimulate simulation right need accuratelyreal world let us make even random integer lucky drawsomething like random pick let copy use thingbetting thing also every time giving input didnt anythingmind randomly giving input right let want get input letpick something randomly let pick random use thing see betrandom integer lucky draw something print clearlyinitially lucky draw random randomly pick numbers ihad printedvalue given values randomly pick print properly letprint let say bet turned bet turned valuestored variable bet lucky draw lucky draw turned valuestored variable lucky underscore draw ok print accountzero every time check see bet lucky draw equivalentequal win lot price otherwise lose let even say amountaccount let say amount game account game account nothing storedvariable account may let maximise part clear okmodified slightly could see summarise modifications betchoosing random integer bet simulating bet anotherrandom integer simulates lucky draw whatever organiser pickingcollections coupons lucky draw print values whateverrandomly picked account initially zero keep playing seerepeat thing said let us see happens playgame week repeat thing put zero account equal zeroevery time account initialised zero really see whetheractually win lose actually putted loop must loop letcut line cut let put initially account nothing gameaccount nothing start game pick bet organiser picks luckydraw equivalent win amount dont winamount since paying hundred rupees play game subtractinghundred cases end game say amountaccount currently given seven times going repeat saidgoing simulate week alright week seven days let going simulateseven days seven times print amount every instance increasenumber iterations may get messy print amount every instancetime final amount many number gamesplayed print final one thats ok repeat seven timeslet use far loop loop used slightly convenient us thatsusing range seven want repeat seven times see looprequires indentation let select entire block want things indentedindented used tap key indented everything fine repeatingseven times right programme done quickly summarise runsee happens initially zero game account nothing gameaccount playing game seven days week playinggame day bet one number organiser draw drawnumber randomly set coupons call lucky draw bettinglucky draw organiser taken equal win prize moneyequal win prize money otherwise dont win anything play gamepay hundred rupees deducting hundred casesgame printing amount game accountprogramming saved let maximise portion value getoutput let run run file see got output maybe maximisepane clearer let maximise pane see initially bet three luckydraw six lost account minus hundred paid hundredrupees initially didnt win anything minus hundred see next time betlucky draw equal got lucky got amount next time lost lossnext time lost loss loss loss loss could seelosses compare gain still due ratio amount couldsee profit net profit game simulatedplaying game one week let try running run gettingamount oh getting still amount wins time losingtime winning wins loss completely random right anythinghappen simulated play game one week next seehappens play game one month see next video alright guysprevious videos seen simulation lottery game play nextsaw play one week continuously let us see play one monthsaverage take different months different number days average lettake thirty days thirty days playing simple change place sevenmake thirty thirty outputs difficult analyse let print everythingdone hope understood things work thing work givennumber iteration number times repeating increasing output may lookslightly messier let command lines commanding may need printevery time happens print amountend thirty times right dont even want print every iterations let bringloop remove indentation let bring loopsloop simulated thirty times may win may lose something mayhappen let see amount played thirty timesplayed one month completely amount whether net profit netloss let us see let save file let get output right letlet maximise ok let maximise better let run fileamount account minus three hundred net loss time monthrepeat time time huge loss compare minus three hundred minustwo thousand hundred really huge loss something winning lessloss loss lot alteration winning losingactually predict win loss seems losses occur incur hugelet us try increasing number iterations tried one month right thirtyiterations let us try one year happens play game one year let ussee next video alright guys till seen lottery simulation gameplay game one week one month seen let us expandlet us see happens play game one year nothing simple changeprogram place thirty thirty days month right play day simulatedthirty place thirty play one year one year may three sixty fivethree sixty six days depends leap year let consider current year twothousand eighteen non leap year three sixty five days put threesixty five even try three sixty six dont think much change resultone iteration one time play extra dont think much change resultslet us plot let us look whether could win losing let us see letmaximise pin let run file oh heavy loss losing twelvethousand rupees oh god seven thousand rupees losing loss loss win loss loss thirtythousand still heavy loss loss loss win loss could see loss compare winkeep playing one year able find loss compare winnet amount still idea loss want visualisehappens let us see visualisation part next videoalright guys seen happens play game lottery game one yearcontinuously let us visualise happens rather seeing net profit net loss letus visualise let say visualisation mean let us plot graph basically graphxaxis yaxis xaxis day win lose dayone amount account day two amountaccount let us plot let us observe trends plot packageamt plot lib hope used package guess crowd computingexperiment jelly beans experiment hope used package lets reusepackage import import matplotlib dot pyplot name big evenneed use lot times difficult us type big name let us use shortername alias name use key word say useshorter name let say plt instead telling matplotlib dot polyglot telling pltinstruction means imported need plotright need xaxis yaxis need two lists x denotes x axis quantity letdenote axis quantity day increase one value xaxis day one day two day three something like beginning loopadd x list x dot append functionality add element listfirst day means add one second day two third day threesomething like youre loop starts counting zero want givenvisualisation humans need counting start one tackleadd one append zero want one one want two basicallywant values plus one let append plus one ok day started betsomething organiser draw something equal win amount else dont winanything play game given paying hundred rupees deductinghundred instance game whateveramount game account append axis plotcorresponding thing axis let append axis list dotappend add list account account amount right let sayappend value done end three sixty five daysx list corresponding day count day one day two day three day threesixty five axis list whatever amount account contain particularday available want plot net profit net lossplot say plt dot plot function plotsay x want plot two things want show plot say plt dotshow plt dot show plot values taking days x axis setamount axis generate plot show us plot two lineslet us observe visually happens days let us save programlet maximise side let maximise pane maximise current pane letrun file see sometimes increase account sometimesmoney huge fall could see see really huge fallkeep playing encounter loss could see analysefall huge makes say lottery dont work oklet us try say see even could see loss end lossevery time observe axis amount positive values less negativeshigh especially observe particular graph zero thousand maximumgain loss six thousand something days even heavyloss take home message lottery doesnt work amount saypay hundred win nine hundred nine times pay temptingstatement analyse interfaces win actually cheatingtempting lose lot mostly case lose take homemessage programming screen cast simulated seeninterested next avenue would probability involvedcould look map happening lose lot timewould analyse probability winning probability loosing getinsides interested check math behindtimes lose run time run time lossloss loss see lot loss win run probably six timesone say net profit times net profit loss gaingame loss happens del deep probability aspectsmathematical aspects done extension learnprogramming screen cast simulated shown losshappens explained mathematical part look alright guysthanks watching programming screen cast nice dayfirst thing clicking pictures course apply filters orderenhance let us shift gears explore new technique enhance imagesnext joy image processingsee cctvs surveillance cameras almost everywhere daysclue exactly record whole lot photo frames becomes videostore video transactions across several days storageproblem hence video quality less want want store oneweeks happenings hard disc quality less quality highstore one days worth transactions point images captured surveillancecameras generally low quality low whenever crime mighteven difficult detect surveillance cameras minute detailsindeed use expertise programming take video frames analysing videodifficult let us limit discussion photos assume capture picturepicture low quality low clue exactly minute detailspicture example probably seeing take picture mineprobably wouldnt know exactly symbol shirt right useprogramming enhance image much lesser details get enhancedvisible see enhancement would great use forensic expertsespecially situations crime captured pictures lets saysurveillance cameras qualities low enhance let ussee couple situations let us tell gon na tell exactly enhanceimages much picture make much much better sense previouslyhello welcome programming screen cast image processing let us explore coolideas image processing screen cast taking programming partlet show images using going image processingfirst image could see looks like mirror image makeimage news paper clipping photos pasted wallwritten newspaper clear mirror image clearperson understand written let us apply image processingtechnique transform image form understand let us try seefirst image image processing going next imageimage taken crime location said lectures wholeexercise image processing ended helping find truth thing image bulletshot bullet shots seen many feature imageclear us apply image enhancement techniques image processing techniquesenhancement technique enhance image shall understandminute features present image knows maybe may serve evidence let seeok start programming component first shown imagemirror image needs flipped understand written newspaper clipping pasted wall let us see exercisetechnique going apply flipping term flipping imagefirst image processing task going need downloadsnecessary package let us need image package pil library let importpil import image done importing alright shown image imageobtained dot png name obtain dot png lets open image done way imageequals image dot open suppose give file path image filedirectory python script giving file name caseimage file different path need specify entire path please note correctpath specified else specify name file would searcheddefault directory script running please note point file name obtained dotpng run opened images part opening image doneimages general computers processes terms matrices image openedcorresponding matrix format taken capture object img matrix formatcapture flipping image terminology using actuallyconvert mirror image actual image using terminology thingeasy minds technical terminology uses transposing saidimages generally transferred terms matrices matrices hope al would comeacross high school level mathematics matrices special operationcalled transposing nothing making rows columns columnsrows call transposing transposing operations going applymatrix actually give back actual image mirror imagegoing apply lets see matrixobject transposed image let call transpose img nothing image imgdot transpose pre defined function transpose pre defined parameterimage dot flip left right pre defied parameter line takesmatrix captured img object transposes matrix new matrix storedtranspose img object object captures new matrix got actualimage matrix representation understandable computersneed need convert form understandable humans letsnext step convert human understandable format save filefile human understandable format next step need alrightdone like transposed image take matrix object need actually savehuman readable format take object call save function also predefined function takes argument like done opensupposed specify path want output file saved want filesaved directory giving desired file name case wantsaved different path please specify entire path correctly give desiredfile name let give desired file name call corrected mirrorimage clear us corrected clear uscorrected dot png corrected dot png file format want input file formatfine given case need may try changing fileformat required jpg dmp whatever give tat ok everythingdone print message us understand output file ready saydone flipping done flipping ok everything done let run file given commandwell line code case think need understand codeplease pause video read understand code may proceedrunning file let run file ok got output done flipping let checkoutput file named corrected dot png let check corrected dot png yeah gotyeah file see clear us understand writtennews paper clipping doctor accused killing wife something like yeah news paperclippings understand written unlikeprevious image clear us observe side side clearimage clear us applying transposing operation gotimage clear us understand conveyedtransposing operation helped us underwhelm something previouslyclear clear help coding computing well among two operationssaid one operation done let us go second operation dont wantthing let command done first operation let commandsecond operation nothing image enhancement many image enhancementtechniques available going use one special technique called histogramequalisation specifically adaptive histogram equalisation call clahetechnical name take image enhancement technique goinguse shown image previously yeah imagefeatures image clear us could taken clearance applytechnique enhance image portions clearly visibleclearly visible knows image taken image bullet shottaken crime location maybe features may evidencesopen new facts anything possible right lets explore alrightneed import package cv cv package need importedneed likeneed read image image img equals cv dot image read parametersupposed give similar previous one suppose give file path sinceimage file path directory giving file name caseimage file different place need specify path completely file name crimedot png let read image image read suppose applytechnique clahe image enhancement using clahe contrast limited adaptive histogramequalisation clahe case interested learn manygood articles available online reveal everything right math underlyingconcept everythings beautifully explained see aim arrivalmystery getting technical part looked timelot resources available straight forward let us applytechnique rescue unravel new facts knows anything may unravel lets seefirst prepare applying clahe technique preparation clahe stepdone equalisation technique histogram equalisation techniqueenhancement technique enhance image preparatory thing donecreating object properties enhancementcv dot create clahe preparatory face done enhancementtechnique works well images black white format needunravel facts let us convert black white formats get knownew facts based needed even convert back colourneed basis anytime let us convert nothing gray scaleimage convert gray scale image gray scale image convertimage gray scale value enhancement technique shall really reallyeffectively applied converted gray image equal cv dot cvtcolour passimage object colour underscore bgrgray converted gray scaleimage cvt sorry cv pre defined functionality cv package observeeverything pre defined lines code anyone enhanceimage unravel facts simple days ok done makinggray scale image let ok shall apply enhancement process applyenhancement next step enhanced image clahe dot apply grayscale image suppose give gray scale image clahe algorithm gray scaleimage passed enhancement said image processingwould delt terms matrices img matrix corresponding original imageconverted gray scale corresponding matrix captured gray imgapplied transformation would occur image enhancedparticular matrix captured e h image enhanced image shortform using captured particular object said enhancementdone format understandable computers next step makehuman understandable lets output saved file save filenext step supposed cv dot im right image right ualways supposed give path file want output file also writtendirectory giving desired name case wantdifferent path please specify complete path would like call enhance dot pngok format case want change format try changingimage must image corresponding particular matrixparticular matrix enhanced image enhanced one matrix representationunderstandable computers representation understandable humanswritten pass well particular file named enhanced dot pngcommand done everything saved notify us let us printdone enhancing would recommend please pause video take look codewritten comments please look code understandunderstood completely lets go running code ok lets run code yeahdone done enhancing shows let us search file enhanced dot png enhanceddot png let us open ok given file clear observeenhanced version image cracks wall starting every minutedetail observed seems marking even could observed alrightenhanced image details clearly visible originalimage revealed enhancement shall analyse may opennew facts earlier un realised thank watching screen cast nice daysee many times take picture realise actually appear betterinbuilt image processing applications cell phonecamera bid industry know look instagram takespicture shows ten different ways sort enhanced rightshowed couple examples take image see matrixperform operations get brand new picture rightbeginning big ocean actually explore whatever extent wantlist slit lift filt eat tea common among let us find forth comingjoy named anagramsknow hookes law well hookes law states force needed extendcompresses spring distance proportional distance discoveredrobert hook well earlier times scientist concern protecting secretssharing new knowledge world robert hooke first reported hookes lawunscrambled means force proportional stretch mustwondering discussing well look two words calledanagrams anagram word phrase formed rearranging letters another wordlet give examples anagram example listen silent tar rat dustystudy inch chin brag grab stressed desserts let us move towards programmingscreen cast anagramsmove programming screen cast anagrams like tell asciivalues ascii basically c stands american standard code informationinterchange ascii values basically represent character encoding meancharacter encoding example ascii value sixty five means characterrepresented integer value integer sixty five represents character similarlyascii values rest characters show asciitable see capital represented sixty five capital b representedsixty six capital c sixty seven capital sixty eight goes till capital z ninetysimilarly character encoding smaller lower case lettersexample small represented ninety seven small b represented ninety eightgoes till one twenty two z represented one twenty two similarly specialsymbols also ascii values examples exclamation mark representedthirty three hash value thirty five dollar sign represented thirty six percentsign represented thirty seven similarly ascii values plus minus even roundbraces see refer tables ascii values usingascii values implementation program related anagrams let usmove towards programming screen cast anagramswelcome programming screen cast anagrams hope know asciivalues explained previous video havent watch previous video pleasego previous video ascii values basically represent character encodingcharacter represented integer value ascii basically stands american standardcode information interchange already exchanged previous videoplease go questions comes find ascii values pythonfind ascii values characters python pre defined functioncalled ord ord pre defined function using find asciivalue particular character show example need find asciivalue capital write capital sixty five already toldascii value capital sixty five b sixty six c sixty seven crosscheck whether giving us right ascii values sixty six capital csixty seven check value capital z basically ninety yes ninetyalso check ascii values lower case letters write smallninety seven correct small b ninety eight small c ninety nine let us alsocheck ascii value small z one twenty two yes ascii valuesfind ascii value particular character already explained alsoascii values special symbols like sign exclamation percent hash tagalso check let us check sign exclamation thirty three crosscheck table shown previous video cross checkparticular table let us check sixty four percent sign thirtyseven dollar thirty six hash tag thirty five find asciivalues particular character special symbols advise crosscheck table given previous video let us use let us usefunction implement anagrams know two strings need findwhether two strings anagram take two strings take strinput enter first string also take another string str writeinput enter second string second string know default takes stringinput dont need type cast case integer decimal values whenevertake string input dont need type cast write inputfunction input round basis whatever message want displaydone str str compare str compare str findwhether two strings anagrams let us think useascii values use ascii values use characters presentanagrams please think ascii values characterspresent anagrams strings set characterstwo strings anagrams set characters exampleshowed one example cat rat strings comprise three letters threecharacters r sum values strings sumascii value strings answer answertwo strings anagrams otherwise write codesum ascii values characters present string take count oneinitialise zero take variable use loop runloop till length string one since trying sum ascii values strtake loop take length str write writecount one equal count one plus use ord function strcount value count one store sum ascii values characterspresent str increment value traverses whole strtake count two also zero similarly apply loop order findsum ascii values str write length str write count two equalcount two plus ord function str also increment value thinkdone generating ascii values strings write countone equal equal count two print anagrams anagrams elseneed print need print anagrams writeanagrams think done program took two stringsstored ascii values characters present stringscount one count two respectively compare count one count twoequal must anagrams otherwise anagrams runwrite anagrams dot py enter first string example enter listenenter silent know listen silent make anagrams sayinganagrams think mistake yes havent initialiseplease look havent initialise incremented need initialiseusing variable loops mistakeplease rectify need initialise let run write silentlisten let us check whether put yes anagrams right let us let runwrite example anagramswrite example wet write rat anagrams programme givingus right output let also show count one count two storingget know actually values count one also printcount two let us run let us take strings anagrams writerat write tar see count one also three twenty seven count twoalso three twenty seven anagrams program givingus output anagrams since already know anagramsgiving us right output code anagrams goprogram first take two strings str str motive figurewhether two strings anagrams take one countcount one store ascii values sum ascii values characters presentstr initialise equal zero loop runtill length str storing sum count one using ordfunction find ascii values store sum ascii values characterspresent str incrementing printing asciivalues str initialising another variable count two storesum ascii values characters str also equal zeroneed already incremented previous loopusing using variable need initialiseinitialise wrote equal zero loop countnumber sum ascii values present str printed count two valuechecked count one equal equal count two equalanagrams otherwise anagrams hope understood logicbehind logic behind two strings anagrams sum asciivalues characters present strings self evidentshowed different examples silent listen tar rat silent listen setcharacters present str str ascii values alsothats took sum ascii values checked whether two equalequal strings anagrams otherwise anagrams wellmany ways find whether two strings anagramslike discuss discussion form ways find figurewhether two strings anagrams fourth coming screen cast tellingone way figure whether two strings anagramsthankwelcome programming screen cast anagrams particular programmingscreen cast discussing another way figure whether two strings anagramsprevious programming screen cast already discussed way figurewhether two strings anagrams particular programming screen castdiscussing another way particular method requires use sorted functionsorted function sorted basically sorts sequence list example list returns sortedlist show use sorted function example listnamed x integer values values present sorted examplefour three one two write print sorted x see printed sorted value printedsorted values ascending order sorted function basically returns sorted valuesascending order repeat sorted function default sorts value present listascending order id want sort list descending order wellway example sorted x passanother parameter named reverse write true let us check whether worksyes works write reverse equal true sort valuesascending order repeat sorted functions sorts value ascending order writereverse equals true sort values descending order usesorted function also use sorted function different data types exampleuse sorted function character values example x listcharacters q example w e r write print sorted x press entersee sorted values alphabetical order first e q r wlist characters sort functions sorts character alphabetical orderalso use string sorted function let us find useexample x string python x string value pythonwrite print sorted x print yes sorted characterspython alphabetical order first h n n p see useinteger list use character list also use string use sortedfunction sort values present particular list string hopealready aware dictionaries also use sorted sort dictionarytake dictionary name x write example q qkey one value take w w key two valuee example value three lets take one valuewrite four take value zero invalid syntaxlet us find problem problem didnt use curly braces yesdictionary use curly braces list use square rectangle bracesuse curly braces write print sorted x see sortedvalues alphabetical order first e q w sortingdictionary values basis keys yes sorting dictionary values basiskeys please note fact another example example list stringsexample ccccc bb ddd want sort list basic lengthparticular string yes want sort list basis length particular listoutput first since list since string smallest length firstprinted bb printed ddd ccccc printedfairly easy need write print sorted capital lkey length write length press enter desired outputsorted list string basis length particular string firstbb ddd ccccc sort basis lengthparticular string hope sorted function clear guys use sortedfunction program program figure whether two strings anagramsfirst take two strings take str str write inputenter first string write str equal input enter second stringfigure purpose would sorted function would serve purpose would sortedfunction serve sort list str str sorted versiontwo list sorted version two list say strstr anagrams otherwise write sorted str equalequal sorted str print anagrams else printanagrams let us run program save anagrams two dot py enter firststring enter listen enter second string enter silent anagramsoutput correct run enter first string hello enter second string thyuirandom string anagrams output correct also show whethersorted version two list print sorted str printsorted str let us try run take another anagram exampletake tar take rat sorry typed r anagrams seesorted version even first r r let us checklist anagrams write rat write tar see sortedversion two lists first let us r rat tar rsorted version two list thats anagram also takeexample two lists anagrams write another list examplewow wow anagrams since sorted version two listfigure figure check whether twostrings anagrams go program first needinput two strings fairly simple need check whether sortedversion two list anagramsanagrams program anagrams fairly easy need applyfunction get answer discussed two ways whether twostrings anagrams think many ways figurelike discuss discussion form bring nice ideas checkwhether two strings anagrams hope programming screen cast usefulguys problem doubt please refer discussion formhelp thank apart sleeping working eating else dayday life well answer would face booking let us try explore facebooknext joy facebook sentiment analysissaw happened people tend putting whole lot life status facebookfact someone active facebook actually revealingsuppose reveal fact looking status updates seehigh general low mood facebook happening placesometimes suspect people active real life facebook comesmind say analyse given data data begin many timessmile day many straights walk take every day salt intakeaverage per day sugar intake much junk though eat many hours sleepdont think get data one full year analyse put exactly oneinfer probably infer healthy life style living rightmean data analytics analysing given data something simple straight forwardnumber walking straights take per day say something fitness leveldata update facebook overall activity facebook thinkinfer something active facebook user fact somethinginfer whole lot things assume take data shared facebookpast one month status one status two status three status four lets sayhundred status messages shared past one month observinginfer example status something like life isnt fair expecteddont think sounding slightly negative right second example assume statussomething like proud country made sound positiveirrespective tone one might talk sentence proud countrygives positive connotation right let us look third example et goals rightsuggestive one liner neither positive negative neutral correct seesentiment first sentence negative second positive thirdneutral always programming course told three sentenceseven told realised positive negative neutral waywrite piece code without human interventionuse computer programs predict sentiment given sentence useu know getting told take one months data personcomprises hundred status message yeah updated hundred status messagestake one two three hundred look sentimentsentences assume eighty hundred negative means person undergoingtrauma life isnt general happy person contrary ninetymessages hundred full joy means person look spousemarry person right happy partner spread sort happinesshappiness know contagious right amount hundred status messagespositive many negative many neutral dont thinkask answer question say something personinterested following exercises want take status messages everupdated face book ever since part facebook lets say two thousand eightthink facebook ten years would likedownload status updates try analyse looking sentimentsindividual status updates see months happy unhappymonths unhappier happier times neutral seeask lot questions hurdle download data ten yearsold downloaded measure sentiments status updates facteasy today fact facebook data wellgoing illustrate point number one tell downloadfacebook data point number two python rescue tell use exactpython api analyse face book datawelcome programming screen cast facebook sentiment analysis goingstep step explain facebook sentiment analysis givingbackground sentiment analysis others things let us start programmingscreen cast first first downloadfacebook data store excel file show downloadfacebook data must login facebook account facebookaccount already logged first need download facebook datamust go settings profile sayinggo settings facebook information see tableft pane facebook information clink facebook informationdownload information download copy informationkeep transfer another service click view seefacebook account information information form posts photosvideos comments likes reactions friends etc etc first need create filesee button create file click see written fileprocessed let know complete take time createfile download file yes already downloaded facebookinformation show facebook user namesee information friends followersmessages pages payment history everything stored create filedownload file information downloaded formationfolders yes given one zip folder folder giveninformation given information friends groups likesreactions messages everything information neednext need store information excel file yes showexample folder name post click postpeople post timeline post open page postbasically post means posts shown postsposted timeline need need store postexcel file created excel file example post storedexcel file need thing need copy post html fileneed paste post excel file ok repeat downloadfacebook data first need go settings facebook profile settingsgiven facebook information need click facebook information tableft pane going asked download information firstneed create file file folder created given folderlike given folder like everyinformation related facebook profile information regarding friends postnetwork information download facebook data programmeneed save information excel file pick folder examplepicked post open post dot html came like stored postexcel file copied posts stored excel file seeposts stored ok save post excel file savefile using file programme downloadfacebook information store facebook store excel file first foremoststep need download facebook data store excel fileneed need import pandas library purpose serve provideseasy use data structure data analysis get know datastructures eventually programming screen cast need import nltklibrary library used process human language yes libraryused process human language nltk provides sentiment analysishuman data sentiment analysis sentiment analysis involves working whetherpiece text positive negative neutral example askneutral sentence say happy today positive sentencesay dont know life going sad negative sentencesentiment analysis involves working piece text figuring whetherpositive negative neutral sentiment analysisfile stored post stored excel file analysinganalysing basis sentiment analysis analysing post whetherpost negative positive neutral facebook sentiment analysisuse vader vader vader valence aware dictionary sentiment reasoned yesvader used sentiment analysis tells whether piece textpositive negative neutral also takes account intensity sentiment yes alsotakes account intensity sentiment mean examplesaid happy today also tell sentence eighty percentpositive seventy percent positive also tell intensity sentiment okusing vader vader stands valence aware dictionary sentiment reasonedtakes account intensity sentiment need download vaderlexicon lexicon lexicon acts dictionary lexicon acts dictionaryneed convert excel sheet created data framehelp pandas data frame data frame two dimensional structureform table pandas provides data frame facility said pandas provideseasy use data structure data frame one using oneprogram step step guide program facebook sentimentanalysis know things clear programming screencast everything thing become clear revise done till firstneed download facebook data need login facebook accountneed go settings download facebook information needstore information excel file already explained need importpandas library basically provide easy use data structure data analysisneed import nltk library nltk library help process human languagebasically help analyse human data help sentimental analysishuman data sentiment analysis involves working whether piece text positivenegative neutral already given example positive neutral negativesentences using nltk using vader vader also takesaccount intensity sentiment yes need download vader lexiconlexicon acts dictionary also need convert excel sheetcreated data frame data frame data frame basically two dimensionalstructures form table provided pandas libraryproceeding programming screen cast next video thanklet us start programming screen cast facebook sentiment analysis hopewatched previous videos havent suggest watch previousvideos start program facebook sentiment analysis think knowsentiment analysis basically sentiment analysis sentiment analysishelps figure whether piece text positive negative neutral yes facebooksentiment analysis help realise sentiment analysis facebook data firstneed download facebook data tips already explainedprevious video first download facebook data store excel filedownload facebook data store excel file using excel fileprogram already explained first need import pandas librarywrite import pandas pd also need import nltk library helpsentiment analysis write import nltk need import vader libraryneed write nltk dot sentiment dot vader import sentimentintensity analyser need import three libraries pandas nltk vaderneed import sentiment intensity analyser asked download vader lexicondownload directly write command please pay attentionwrite nltk dot downloader dot download bracket need write vader underscorelexicon lexicon basically acts dictionary need also downloaddownloading lexicon command nltk dot downloader dot downloadpackage need download need write vader underscore lexicon hen loadfile file name data underscore file dot excel sx file nameprevious videos like speech recognition doubt need storefile going use program example speech recognition usedaudio file doubt need store file actuallystore file anywhere system bottom line need provide proper pathfile yes need provide proper path file example data underscore filedownload give proper path path basically users simran setiauser name download folder data file okhope clear need provide proper path ok storefile nut need provide proper path program loaded filedone basically xlsx imported library also downloadedvader underscore lexicon also loaded data file nextneed need read excel file write excel equal pd usepandas library read excel file write excel file bracket excel fileloaded variable file reading readexcel repeat pandas library help basically pd dot pandas library helpread excel file write pd u imported pandas pdwrite pd dot excel fie bracket write file variable name file okread excel file help pandas library already said pandas provideeasy use data structure passing excel file converting excel file dataframe data frame explained data frame two dimensional structure formtable data frame help analyse data easily know pandas libraryprovide facility convert excel file data structureeasy analyse yes converting excel file data frameswrite dfs equal xl dot parse write xl dot sheet underscore names zerostoring information first column write zero showexample first column stored post information seestored information first column write zero write hashstatement parsing excel sheet data frame parsing excel sheetdata frame next need update data frames perrequirement example blank rows seeblank rows need delete blank rows data frames write dfsequal list dfs square bracket write timeline namecolumn ok also print dfs basically removingrow data frame write removes blank rows data framerun program see data frames coming run firstneed store file store facebook dot py see data formdata frames whatever written excel file convertedexcel file data frames data frames data framesnext step would analysing sentiment analysis data frameswrite first initialise sentiment intensity analyser write sidequal sentiment intensity analyzer see excel fileinformation post posted example particular time datealready also return need analyse information particular timeinformation whenever whenever sentiment analyser wouldencounter timeline information time information wont analyseanalyse post ok repeat example monday march twenty seven twentyseventeen nothing sentiment analysis removeremove excel file hardcoded program wheneverprogram encounters particular statement time information skips informationdoesnt sentiment analysis information write storestr information basically utc plus zero five thirty may differentexcel file need check excel file kindinformation skip information nothing sentimentanalysis write data dfs equal data dot find str particularcommand str excel file data frames basically returnboolean value example returns minus one means hasnt foundstr particular example data dataencounter particular line monday march twenty seven twenty seventeenencounter str also wont return minus one found utcplus five thirty hasnt found utc plus five thirty meansinformation needs analysed need analyse need analyseparticular information need perform sentiment analysis particular informationhasnt found str means need analyse particular statementwrite ss equal sid dot polarity underscore scores data whatever data encounterneed analyse needs perform sentiment analysis printdata also print data k ss write print k ss kbasically print whether basic information positive negative neutral alsoprint intensity sentiment run file get knowtrying say run let us run let us run superinformation timeline information example firstpost row rohith sharma wants read murder roger whatevergiven polarity also point two five one negative point seven four nineneutral zero positive also given compound information compoundinformation aggregate sentiment example negative also neutral alsocompound information says point minus point six nine means negativesimilarly fourth coming post return zero negative point seven twoone neutral point two seven nine positive also given compoundinformation since negative value zero positive compoundinformation compound sentiment also positive analyse everyinformation given excel file return whether negative neutral positivealso compound sentiment figure informationthink everything clear guys revise step also firstneed need import libraries basically needimport three libraries need import pandas need import nltk alsoneed import vader imported three libraries downloadedvader underscore lexicon also need download need load filesince already explained need provide proper path file storefile anywhere system read excel file reading excel filepass excel file data frames yes data frames facility providedus pandas library data frames basically two dimensional structure formtable makes analysis easy removed blank rows presentexcel file print printed data framesevery data frame printed initialised sentiment intensityanalyzer explained guys excel file also timeinformation time post posted timeline need analyzeinformation relevance whenever program encounters particular strtime information skips particular statement goes nextstatement taken variable whenever data str foundstr found needs skip example means values minus one hasntfound str yes repeat value minus one hasnt found str one needanalyze particular statement value minus one means hasnt foundparticular statement particular time information analyze statementneed write sid dot polarity underscore scores bracket need supply dataprinted data k ss printed particular k kdenote whether negative neutral positive ss k tell intensityparticular sentiments k sentiment ss k intensity sentimenthope programming screen cast useful guys understoodwell doubts please post discussion form helpthank thank much guess today birthday got packletters written anonymously friends figure writtenletter write code well let us find next joy naturallanguage processingobserve conversation happening two teachers one teacher gettingfeed back students teacher listening whatever teachingsaying let us see conversationhey anamika hey semester semester great thatsalso reflected favour forms received students graduatingoh nice one regular form like show two reasons ok mostlysecond thing feeling would written wait secondanonymous feedback right yeah know written yeah yeahanonymous style write checkedanswer sheets beginning feeling style use sheetsee lot e usage lot adjective feeling would writtenoh wowsee happened one teacher name anamika talking another teachervarsha feedback teacher students given feedbackfeedback particularly anamika impressed one students feedback givenwhole lot complements importantly anamika realises thoughfeedback anonymous feeling might written feedbackunderstands sort way written sentence grammar style writinggeneral even teacher classroom probably knows studentswrite trying figure student could given complementsreally true look style writing conclude personwritten letter let us small experiment huge repository calledproject gutenberg download whole lot books availabletext format free cost without none things copyrighted materialget material analyse data programming skillswould like take look authors complete work try figure seesignatures writing